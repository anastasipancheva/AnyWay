"use client"

import { useEffect, useState } from "react"
import { Card } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog"
import { Edit, Save, X } from "lucide-react"

interface ProfileEditableProps {
  user?: any
}

type ProfileData = {
  firstName: string
  username: string
  age: string
  city: string
  timezone: string
  avatar: string
}

type Settings = {
  deadlineNotifications: boolean
  weeklyDigest: boolean
  studyBuddyMessages: boolean
}

const STORAGE_KEY = "anyway:profile:v1"
const SETTINGS_KEY = "anyway:settings:v1"
const TG_BOT_URL = "https://t.me/anyway_university_bot"
const TG_SUPPORT = "https://t.me/ylnaaaw"

export function ProfileEditable({ user }: ProfileEditableProps) {
  const [isEditing, setIsEditing] = useState(false)
  const [aboutOpen, setAboutOpen] = useState(false)
  const [copied, setCopied] = useState(false)

  const defaultData: ProfileData = {
    firstName: user?.first_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
    username: user?.username || "username",
    age: "17",
    city: "–ú–æ—Å–∫–≤–∞",
    timezone: "UTC+3 (–ú–æ—Å–∫–≤–∞)",
    avatar: "üë§",
  }

  const [profileData, setProfileData] = useState<ProfileData>(defaultData)

  const defaultSettings: Settings = {
    deadlineNotifications: true,
    weeklyDigest: true,
    studyBuddyMessages: false,
  }
  const [settings, setSettings] = useState<Settings>(defaultSettings)

  // --- –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ localStorage –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    try {
      const saved = typeof window !== "undefined" ? localStorage.getItem(STORAGE_KEY) : null
      if (saved) {
        const parsed = JSON.parse(saved) as Partial<ProfileData>
        setProfileData((prev) => ({ ...prev, ...parsed }))
      } else if (user) {
        localStorage.setItem(STORAGE_KEY, JSON.stringify(defaultData))
      }
    } catch (e) {
      console.error("Failed to load profile from storage", e)
    }

    try {
      const savedSettings = typeof window !== "undefined" ? localStorage.getItem(SETTINGS_KEY) : null
      if (savedSettings) {
        const parsed = JSON.parse(savedSettings) as Partial<Settings>
        setSettings((prev) => ({ ...prev, ...parsed }))
      } else {
        localStorage.setItem(SETTINGS_KEY, JSON.stringify(defaultSettings))
      }
    } catch (e) {
      console.error("Failed to load settings", e)
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [])

  const handleSave = () => {
    try {
      localStorage.setItem(STORAGE_KEY, JSON.stringify(profileData))
    } catch (e) {
      console.error("Failed to save profile", e)
    }
    setIsEditing(false)
  }

  const handleCancel = () => {
    setIsEditing(false)
    try {
      const saved = localStorage.getItem(STORAGE_KEY)
      if (saved) setProfileData(JSON.parse(saved))
      else setProfileData(defaultData)
    } catch {}
  }

  // --- –¢–æ–≥–≥–ª—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const toggleSetting = (key: keyof Settings) => {
    setSettings((prev) => {
      const next = { ...prev, [key]: !prev[key] }
      try {
        localStorage.setItem(SETTINGS_KEY, JSON.stringify(next))
      } catch {}
      return next
    })
  }

  // --- –î–µ–π—Å—Ç–≤–∏—è –Ω–∏–∂–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫
  const handleShare = async () => {
    try {
      await navigator.clipboard.writeText(TG_BOT_URL)
      setCopied(true)
      setTimeout(() => setCopied(false), 2000)
    } catch {
      // –§–æ–ª–ª–±—ç–∫: –æ—Ç–∫—Ä–æ–µ–º –±–æ—Ç–∞, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
      window.open(TG_BOT_URL, "_blank")
    }
  }

  const handleSupport = () => {
    window.open(TG_SUPPORT, "_blank")
  }

  const stats = {
    selectedOlympiads: 3,
    calendarEvents: 12,
    studyBuddyConnections: 2,
    joinedChats: 2,
  }

  const achievements = [
    { id: 1, title: "–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏", description: "–í—ã–±—Ä–∞–ª–∏ –ø–µ—Ä–≤—É—é –æ–ª–∏–º–ø–∏–∞–¥—É", icon: "üéØ", earned: true },
    { id: 2, title: "–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫", description: "–î–æ–±–∞–≤–∏–ª–∏ 5+ —Å–æ–±—ã—Ç–∏–π –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å", icon: "üìÖ", earned: true },
    { id: 3, title: "–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –±–∞–±–æ—á–∫–∞", description: "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ 3+ —á–∞—Ç–∞–º", icon: "üí¨", earned: false },
    { id: 4, title: "–ù–∞—Å—Ç–∞–≤–Ω–∏–∫", description: "–ü–æ–º–æ–≥–ª–∏ 5+ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º", icon: "ü§ù", earned: false },
  ]

  const timezones = [
    "UTC+2 (–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥)",
    "UTC+3 (–ú–æ—Å–∫–≤–∞)",
    "UTC+4 (–°–∞–º–∞—Ä–∞)",
    "UTC+5 (–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥)",
    "UTC+6 (–û–º—Å–∫)",
    "UTC+7 (–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫)",
    "UTC+8 (–ò—Ä–∫—É—Ç—Å–∫)",
    "UTC+9 (–Ø–∫—É—Ç—Å–∫)",
    "UTC+10 (–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫)",
    "UTC+11 (–ú–∞–≥–∞–¥–∞–Ω)",
    "UTC+12 (–ö–∞–º—á–∞—Ç–∫–∞)",
  ]

  const avatars = ["üë§", "üë®‚Äçüéì", "üë©‚Äçüéì", "üßë‚Äçüíª", "üë®‚Äçüî¨", "üë©‚Äçüî¨", "ü§ì", "üòä", "üöÄ", "üéØ"]

  return (
      <div className="p-4 space-y-4" style={{ backgroundColor: "#F6F7FA" }}>
        <div className="text-center mb-6">
          <div className="relative inline-block">
            <div
                className="w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-3"
                style={{ backgroundColor: "#051F45" }}
            >
              <span className="text-white text-2xl">{profileData.avatar}</span>
            </div>
            {isEditing && (
                <Dialog>
                  <DialogTrigger asChild>
                    <Button
                        size="sm"
                        className="absolute -bottom-1 -right-1 rounded-full w-8 h-8 p-0"
                        style={{ backgroundColor: "#F2C4CD", color: "#051F45" }}
                    >
                      <Edit className="h-3 w-3" />
                    </Button>
                  </DialogTrigger>
                  <DialogContent className="sm:max-w-md" style={{ backgroundColor: "#F6F7FA" }}>
                    <DialogHeader>
                      <DialogTitle style={{ color: "#051F45" }}>–í—ã–±–µ—Ä–∏—Ç–µ –∞–≤–∞—Ç–∞—Ä</DialogTitle>
                    </DialogHeader>
                    <div className="grid grid-cols-5 gap-3 p-4">
                      {avatars.map((avatar) => (
                          <Button
                              key={avatar}
                              variant="outline"
                              className="w-12 h-12 text-xl p-0 bg-transparent"
                              style={{
                                borderColor: profileData.avatar === avatar ? "#051F45" : "#98A2B3",
                                backgroundColor: profileData.avatar === avatar ? "rgba(5, 31, 69, 0.1)" : "white",
                              }}
                              onClick={() => setProfileData((prev) => ({ ...prev, avatar }))}
                          >
                            {avatar}
                          </Button>
                      ))}
                    </div>
                  </DialogContent>
                </Dialog>
            )}
          </div>

          {isEditing ? (
              <div className="space-y-3">
                <div>
                  <Label htmlFor="firstName" className="text-sm font-medium" style={{ color: "#051F45" }}>
                    –ò–º—è
                  </Label>
                  <Input
                      id="firstName"
                      value={profileData.firstName}
                      onChange={(e) => setProfileData((prev) => ({ ...prev, firstName: e.target.value }))}
                      className="mt-1"
                      style={{ borderColor: "#98A2B3" }}
                  />
                </div>
                <div>
                  <Label htmlFor="age" className="text-sm font-medium" style={{ color: "#051F45" }}>
                    –í–æ–∑—Ä–∞—Å—Ç
                  </Label>
                  <Input
                      id="age"
                      type="number"
                      value={profileData.age}
                      onChange={(e) => setProfileData((prev) => ({ ...prev, age: e.target.value }))}
                      className="mt-1"
                      style={{ borderColor: "#98A2B3" }}
                  />
                </div>
                <div>
                  <Label htmlFor="city" className="text-sm font-medium" style={{ color: "#051F45" }}>
                    –ì–æ—Ä–æ–¥
                  </Label>
                  <Input
                      id="city"
                      value={profileData.city}
                      onChange={(e) => setProfileData((prev) => ({ ...prev, city: e.target.value }))}
                      className="mt-1"
                      style={{ borderColor: "#98A2B3" }}
                  />
                </div>
                <div>
                  <Label htmlFor="timezone" className="text-sm font-medium" style={{ color: "#051F45" }}>
                    –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å
                  </Label>
                  <Select
                      value={profileData.timezone}
                      onValueChange={(value) => setProfileData((prev) => ({ ...prev, timezone: value }))}
                  >
                    <SelectTrigger className="mt-1" style={{ borderColor: "#98A2B3" }}>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      {timezones.map((tz) => (
                          <SelectItem key={tz} value={tz}>
                            {tz}
                          </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
                <div className="flex gap-2 pt-2">
                  <Button onClick={handleSave} className="flex-1" style={{ backgroundColor: "#051F45", color: "white" }}>
                    <Save className="h-4 w-4 mr-2" />
                    –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                  </Button>
                  <Button
                      onClick={handleCancel}
                      variant="outline"
                      className="flex-1 bg-transparent"
                      style={{ borderColor: "#98A2B3", color: "#98A2B3" }}
                  >
                    <X className="h-4 w-4 mr-2" />
                    –û—Ç–º–µ–Ω–∞
                  </Button>
                </div>
              </div>
          ) : (
              <div>
                <div className="flex items-center justify-center gap-2 mb-2">
                  <h2 className="text-xl font-bold" style={{ color: "#051F45" }}>
                    {profileData.firstName}
                  </h2>
                  <Button
                      size="sm"
                      variant="ghost"
                      onClick={() => setIsEditing(true)}
                      className="p-1"
                      style={{ color: "#051F45" }}
                  >
                    <Edit className="h-4 w-4" />
                  </Button>
                </div>
                <p className="text-sm" style={{ color: "#98A2B3" }}>
                  @{profileData.username}
                </p>
                <div className="flex items-center justify-center gap-4 mt-2 text-sm" style={{ color: "#98A2B3" }}>
                  <span>{profileData.age} –ª–µ—Ç</span>
                  <span>‚Ä¢</span>
                  <span>{profileData.city}</span>
                  <span>‚Ä¢</span>
                  <span>{profileData.timezone}</span>
                </div>
                <Badge variant="default" className="mt-2 bg-primary text-white px-3 py-1 rounded-full">
                  –ê–∫—Ç–∏–≤–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫
                </Badge>
              </div>
          )}
        </div>

        {/* Statistics */}
        <Card className="p-4" style={{ backgroundColor: "white", borderColor: "#98A2B3" }}>
          <h3 className="font-semibold mb-3" style={{ color: "#051F45" }}>
            –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
          </h3>
          <div className="grid grid-cols-2 gap-4">
            <div className="text-center">
              <div className="text-2xl font-bold" style={{ color: "#051F45" }}>
                {stats.selectedOlympiads}
              </div>
              <div className="text-xs" style={{ color: "#98A2B3" }}>
                –í—ã–±—Ä–∞–Ω–æ –æ–ª–∏–º–ø–∏–∞–¥
              </div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold" style={{ color: "#051F45" }}>
                {stats.calendarEvents}
              </div>
              <div className="text-xs" style={{ color: "#98A2B3" }}>
                –°–æ–±—ã—Ç–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
              </div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold" style={{ color: "#051F45" }}>
                {stats.studyBuddyConnections}
              </div>
              <div className="text-xs" style={{ color: "#98A2B3" }}>
                –°–≤—è–∑–∏ StudyBuddy
              </div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold" style={{ color: "#051F45" }}>
                {stats.joinedChats}
              </div>
              <div className="text-xs" style={{ color: "#98A2B3" }}>
                –ß–∞—Ç–æ–≤ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–æ
              </div>
            </div>
          </div>
        </Card>

        {/* Achievements */}
        <Card className="p-4" style={{ backgroundColor: "white", borderColor: "#98A2B3" }}>
          <h3 className="font-semibold mb-3" style={{ color: "#051F45" }}>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
          <div className="space-y-3">
            {achievements.map((achievement) => (
                <div
                    key={achievement.id}
                    className={`flex items-center gap-3 p-3 rounded-lg ${
                        achievement.earned ? "bg-accent/20" : "bg-neutral-gray/10"
                    }`}
                >
                  <div className={`text-2xl ${achievement.earned ? "" : "opacity-60"}`}>
                    {achievement.icon}
                  </div>
                  <div className="flex-1">
                    <h4
                        className={`font-medium ${
                            achievement.earned ? "text-primary" : "text-primary/70"
                        }`}
                    >
                      {achievement.title}
                    </h4>
                    <p className="text-xs text-neutral-gray">{achievement.description}</p>
                  </div>
                  {achievement.earned && (
                      <Badge className="bg-primary !text-white">‚úì</Badge>
                  )}
                </div>
            ))}
          </div>
        </Card>

        {/* Settings */}
        <Card className="p-4" style={{ backgroundColor: "white", borderColor: "#98A2B3" }}>
          <h3 className="font-semibold mb-3" style={{ color: "#051F45" }}>
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏
          </h3>
          <div className="space-y-3">
            {/* Deadline notifications */}
            <button
                type="button"
                onClick={() => toggleSetting("deadlineNotifications")}
                className="w-full flex items-center justify-between"
                aria-pressed={settings.deadlineNotifications}
            >
            <span className="text-sm" style={{ color: "#051F45" }}>
              –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö
            </span>
              <div
                  className="w-12 h-6 rounded-full flex items-center p-1 transition-all"
                  style={{ backgroundColor: settings.deadlineNotifications ? "#051F45" : "rgba(152,162,179,0.3)" }}
              >
                <div
                    className={`w-4 h-4 bg-white rounded-full transition-transform ${
                        settings.deadlineNotifications ? "translate-x-6" : ""
                    }`}
                />
              </div>
            </button>

            {/* Weekly digest */}
            <button
                type="button"
                onClick={() => toggleSetting("weeklyDigest")}
                className="w-full flex items-center justify-between"
                aria-pressed={settings.weeklyDigest}
            >
            <span className="text-sm" style={{ color: "#051F45" }}>
              –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞
            </span>
              <div
                  className="w-12 h-6 rounded-full flex items-center p-1 transition-all"
                  style={{ backgroundColor: settings.weeklyDigest ? "#051F45" : "rgba(152,162,179,0.3)" }}
              >
                <div
                    className={`w-4 h-4 bg-white rounded-full transition-transform ${
                        settings.weeklyDigest ? "translate-x-6" : ""
                    }`}
                />
              </div>
            </button>

            {/* StudyBuddy messages */}
            <button
                type="button"
                onClick={() => toggleSetting("studyBuddyMessages")}
                className="w-full flex items-center justify-between"
                aria-pressed={settings.studyBuddyMessages}
            >
            <span className="text-sm" style={{ color: "#051F45" }}>
              –ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è StudyBuddy
            </span>
              <div
                  className="w-12 h-6 rounded-full flex items-center p-1 transition-all"
                  style={{ backgroundColor: settings.studyBuddyMessages ? "#051F45" : "rgba(152,162,179,0.3)" }}
              >
                <div
                    className={`w-4 h-4 bg-white rounded-full transition-transform ${
                        settings.studyBuddyMessages ? "translate-x-6" : ""
                    }`}
                />
              </div>
            </button>
          </div>
        </Card>

        {/* Actions */}
        <div className="space-y-2">
          <Button
              variant="outline"
              className="w-full bg-transparent"
              style={{ color: "#051F45", borderColor: "#051F45" }}
              onClick={handleShare}
          >
            {copied ? "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ! ‚ú®" : "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º"}
          </Button>

          <Button
              variant="outline"
              className="w-full bg-transparent"
              style={{ color: "#051F45", borderColor: "#051F45" }}
              onClick={handleSupport}
          >
            –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
          </Button>

          <Dialog open={aboutOpen} onOpenChange={setAboutOpen}>
            <DialogTrigger asChild>
              <Button variant="ghost" className="w-full" style={{ color: "#98A2B3" }}>
                –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
              </Button>
            </DialogTrigger>
            <DialogContent className="sm:max-w-2xl" style={{ backgroundColor: "#F6F7FA" }}>
              <DialogHeader>
                <DialogTitle style={{ color: "#051F45" }}>AnyWay ‚Äî –ø–æ—Å—Ç—É–ø–∞–π –∏ –±–µ—Ä–µ–≥–∏ —Å–µ–±—è</DialogTitle>
              </DialogHeader>
              <div className="space-y-3 text-sm" style={{ color: "#051F45" }}>
                <p>
                  –í —Ä–∞–º–∫–∞—Ö –°—Ç–∞—Ä—Ç–∞–ø –ê–∫–∞–¥–µ–º–∏–∏ –°–∫–æ–ª–∫–æ–≤–æ –º—ã —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∏–π –∑–∞–±–æ—Ç—É
                  –æ –º–µ–Ω—Ç–∞–ª—å–Ω–æ–º –∑–¥–æ—Ä–æ–≤—å–µ –∏ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—é –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è. AnyWay ‚Äî –æ —Ç–æ–º, –∫–∞–∫ –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ –≤—É–∑ –º–µ—á—Ç—ã –∏ –Ω–µ —Å–æ–π—Ç–∏ —Å —É–º–∞
                  –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ.
                </p>
                <p>
                  –î–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ Mini App –≤ Telegram. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç –≤—ã–±—Ä–∞—Ç—å –≤—É–∑ –∏
                  –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∞ –º—ã —Ä–∞—Å—Å–∫–∞–∂–µ–º –æ –≤—Å–µ—Ö –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö –∏ –ø—Ä–æ—á–∏—Ö –∫–æ–Ω–∫—É—Ä—Å–∞—Ö –¥–ª—è –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è.
                </p>
                <p>
                  –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ –≤—ã–±—Ä–∞–Ω–Ω—É—é –æ–ª–∏–º–ø–∏–∞–¥—É: –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, –¥–µ–¥–ª–∞–π–Ω—ã, —Å–ø–æ—Å–æ–±—ã
                  –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏. –í—ã–±—Ä–∞–Ω–Ω—ã–µ –æ–ª–∏–º–ø–∏–∞–¥—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø–∞–¥–∞—é—Ç –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å –∫–ª—é—á–µ–≤—ã–º–∏ –¥–∞—Ç–∞–º–∏ ‚Äî
                  –æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–æ –∑–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–≥–æ —ç—Ç–∞–ø–∞ ‚Äî –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö.
                </p>
                <p>
                  –ß–µ—Ä–µ–∑ Mini App –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É –æ–ª–∏–º–ø–∏–∞–¥–Ω–∏–∫–æ–≤ ‚Äî –∑–∞–∫—Ä—ã—Ç—ã–π Telegram –∫–∞–Ω–∞–ª-–ø–∞–ø–∫–∞ —Å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º–∏
                  –ø–æ –≤—É–∑–∞–º. –£ –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞ –±—É–¥–µ—Ç –∫—É—Ä–∞—Ç–æ—Ä-—Å—Ç—É–¥–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∏—Ç—Å—è ¬´–≤–Ω—É—Ç—Ä—è–Ω–∫–æ–π¬ª –≤—É–∑–∞, –ø—É–±–ª–∏–∫—É–µ—Ç –≤–∏–¥–µ–æ –∏ –æ—Ç–≤–µ—á–∞–µ—Ç
                  –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã.
                </p>
                <p>
                  –¢–∞–∫–∂–µ –º—ã –ø–æ–º–æ–≥–∞–µ–º –Ω–∞–π—Ç–∏ –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞ –¥–ª—è —É—á—ë–±—ã: –∞–Ω–∫–µ—Ç–∞ —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –Ω–∏–∫–æ–º –≤ Telegram, –ø–æ –∫–æ—Ç–æ—Ä—ã–º
                  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –∏ –æ–±—â–∞—Ç—å—Å—è.
                </p>
                <p className="font-medium">
                  –°–º–æ–≥–ª–∞ –±—ã —Ç—ã —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –µ—Å–ª–∏ –¥–∞ ‚Äî –∑–∞ –∫–∞–∫—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å? ü•∫
                </p>
              </div>
              <div className="flex justify-end">
                <Button onClick={() => setAboutOpen(false)} style={{ backgroundColor: "#051F45", color: "#fff" }}>
                  –ü–æ–Ω—è—Ç–Ω–æ
                </Button>
              </div>
            </DialogContent>
          </Dialog>
        </div>

        <div className="text-center pt-4">
          <p className="text-xs" style={{ color: "#98A2B3" }}>
            AnyWay v1.0 ‚Ä¢ –°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è –≤ –°–∫–æ–ª–∫–æ–≤–æ
          </p>
        </div>
      </div>
  )
}
