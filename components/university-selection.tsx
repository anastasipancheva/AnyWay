"use client"

import { useState, useMemo } from "react"
import { Button } from "@/components/ui/button"
import { Card } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Badge } from "@/components/ui/badge"
import { Calendar, Clock, Trophy, Info } from "lucide-react"
import { EventModal, type CalendarEvent } from "./event-modal"

interface Direction {
  id: number
  name: string
  code: string
  budgetPlaces: number
  passingScore: number
}

interface University {
  id: number
  name: string
  shortName: string
  logo: string
  directions: Direction[]
}

type OlympiadType = "–ë–í–ò" | "100 –±–∞–ª–ª–æ–≤"

interface Olympiad {
  id: number
  name: string
  level: string | number
  type: OlympiadType
  subject: string
  validYears: string
  registration: string
  qualifying: string
  final: string
  features: string
  faculty?: string
  groups?: string[]
  requirementNote?: string
  appliesToSubjects?: string[]
  universityShortName?: string
}

interface UniversitySelectionProps {
  onAddToCalendar?: (event: CalendarEvent) => void
}

// ------------------------ –í–£–ó–´ ------------------------
const universities: University[] = [
  {
    id: 1,
    name: "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–º–µ–Ω–∏ –ú.–í. –õ–æ–º–æ–Ω–æ—Å–æ–≤–∞",
    shortName: "–ú–ì–£",
    logo: "üèõÔ∏è",
    directions: [
      { id: 1, name: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", code: "01.03.01", budgetPlaces: 120, passingScore: 350 },
      { id: 2, name: "–§–∏–∑–∏–∫–∞", code: "03.03.02", budgetPlaces: 180, passingScore: 340 },
      { id: 3, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", code: "09.03.01", budgetPlaces: 90, passingScore: 360 },
      { id: 4, name: "–≠–∫–æ–Ω–æ–º–∏–∫–∞", code: "38.03.01", budgetPlaces: 150, passingScore: 380 },
      { id: 5, name: "–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç–∏–∫–∞", code: "42.03.02", budgetPlaces: 80, passingScore: 370 },
      { id: 6, name: "–•–∏–º–∏—è", code: "04.03.01", budgetPlaces: 140, passingScore: 330 },
      { id: 7, name: "–ë–∏–æ–ª–æ–≥–∏—è", code: "06.03.01", budgetPlaces: 160, passingScore: 320 },
      { id: 8, name: "–ò—Å—Ç–æ—Ä–∏—è", code: "46.03.01", budgetPlaces: 100, passingScore: 350 },
      { id: 9, name: "–§–∏–ª–æ–ª–æ–≥–∏—è", code: "45.03.01", budgetPlaces: 120, passingScore: 340 },
      { id: 10, name: "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", code: "37.03.01", budgetPlaces: 70, passingScore: 365 },
      { id: 11, name: "–°–æ—Ü–∏–æ–ª–æ–≥–∏—è", code: "39.03.01", budgetPlaces: 60, passingScore: 355 },
      { id: 12, name: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è", code: "41.03.05", budgetPlaces: 50, passingScore: 385 },
    ],
  },
  {
    id: 2,
    name: "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π —Ñ–∏–∑–∏–∫–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç",
    shortName: "–ú–§–¢–ò",
    logo: "üöÄ",
    directions: [
      { id: 13, name: "–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ —Ñ–∏–∑–∏–∫–∞", code: "03.03.01", budgetPlaces: 300, passingScore: 340 },
      { id: 14, name: "–§–∏–∑–∏–∫–∞", code: "03.03.02", budgetPlaces: 200, passingScore: 330 },
      { id: 15, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", code: "09.03.01", budgetPlaces: 180, passingScore: 350 },
      { id: 16, name: "–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", code: "01.03.02", budgetPlaces: 150, passingScore: 345 },
      { id: 17, name: "–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", code: "27.03.03", budgetPlaces: 100, passingScore: 320 },
      { id: 18, name: "–ë–∏–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", code: "12.03.01", budgetPlaces: 80, passingScore: 310 },
      { id: 19, name: "–†–∞–¥–∏–æ—Ñ–∏–∑–∏–∫–∞", code: "03.03.03", budgetPlaces: 90, passingScore: 325 },
      { id: 20, name: "–ê—ç—Ä–æ–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", code: "24.03.02", budgetPlaces: 70, passingScore: 335 },
      { id: 21, name: "–≠–∫–æ–Ω–æ–º–∏–∫–∞", code: "38.03.01", budgetPlaces: 60, passingScore: 340 },
      { id: 22, name: "–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç", code: "38.03.02", budgetPlaces: 50, passingScore: 330 },
      { id: 23, name: "–•–∏–º–∏—è", code: "04.03.01", budgetPlaces: 40, passingScore: 315 },
      { id: 24, name: "–ë–∏–æ–ª–æ–≥–∏—è", code: "06.03.01", budgetPlaces: 45, passingScore: 305 },
    ],
  },
  {
    id: 3,
    name: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
    shortName: "–°–ü–±–ì–£",
    logo: "üè∞",
    directions: [
      { id: 25, name: "–§–∏–ª–æ–ª–æ–≥–∏—è", code: "45.03.01", budgetPlaces: 90, passingScore: 290 },
      { id: 26, name: "–ò—Å—Ç–æ—Ä–∏—è", code: "46.03.01", budgetPlaces: 85, passingScore: 285 },
      { id: 27, name: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", code: "01.03.01", budgetPlaces: 100, passingScore: 320 },
      { id: 28, name: "–§–∏–∑–∏–∫–∞", code: "03.03.02", budgetPlaces: 120, passingScore: 310 },
      { id: 29, name: "–≠–∫–æ–Ω–æ–º–∏–∫–∞", code: "38.03.01", budgetPlaces: 91, passingScore: 291 },
      { id: 30, name: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è", code: "41.03.05", budgetPlaces: 84, passingScore: 284 },
      { id: 31, name: "–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç–∏–∫–∞", code: "42.03.02", budgetPlaces: 70, passingScore: 300 },
      { id: 32, name: "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", code: "37.03.01", budgetPlaces: 80, passingScore: 295 },
      { id: 33, name: "–°–æ—Ü–∏–æ–ª–æ–≥–∏—è", code: "39.03.01", budgetPlaces: 60, passingScore: 280 },
      { id: 34, name: "–§–∏–ª–æ—Å–æ—Ñ–∏—è", code: "47.03.01", budgetPlaces: 50, passingScore: 275 },
      { id: 35, name: "–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è", code: "40.03.01", budgetPlaces: 110, passingScore: 305 },
      { id: 36, name: "–•–∏–º–∏—è", code: "04.03.01", budgetPlaces: 90, passingScore: 290 },
    ],
  },
  {
    id: 4,
    name: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–∏–π –ø–æ–ª–∏—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
    shortName: "–°–ü–±–ü–¢–£",
    logo: "‚öôÔ∏è",
    directions: [
      { id: 37, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", code: "09.03.01", budgetPlaces: 295, passingScore: 295 },
      { id: 38, name: "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è", code: "09.03.04", budgetPlaces: 310, passingScore: 310 },
      { id: 39, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", code: "09.03.02", budgetPlaces: 310, passingScore: 310 },
      { id: 40, name: "–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", code: "01.03.02", budgetPlaces: 310, passingScore: 310 },
      { id: 41, name: "–§–æ—Ç–æ–Ω–∏–∫–∞ –∏ –æ–ø—Ç–æ–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", code: "12.03.03", budgetPlaces: 180, passingScore: 280 },
      { id: 42, name: "–ë–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è", code: "19.03.01", budgetPlaces: 120, passingScore: 270 },
      { id: 43, name: "–î–∏–∑–∞–π–Ω", code: "54.03.01", budgetPlaces: 100, passingScore: 260 },
      { id: 44, name: "–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç", code: "38.03.02", budgetPlaces: 80, passingScore: 250 },
      { id: 45, name: "–≠–∫–æ–Ω–æ–º–∏–∫–∞", code: "38.03.01", budgetPlaces: 90, passingScore: 255 },
      { id: 46, name: "–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞", code: "15.03.06", budgetPlaces: 150, passingScore: 285 },
      { id: 47, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", code: "10.03.01", budgetPlaces: 281, passingScore: 281 },
      { id: 48, name: "–§–∏–∑–∏–∫–∞", code: "03.03.02", budgetPlaces: 283, passingScore: 283 },
    ],
  },
  {
    id: 5,
    name: "–¢–æ–º—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
    shortName: "–¢–ì–£",
    logo: "üéì",
    directions: [
      { id: 49, name: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", code: "01.03.01", budgetPlaces: 100, passingScore: 280 },
      { id: 50, name: "–§–∏–∑–∏–∫–∞", code: "03.03.02", budgetPlaces: 120, passingScore: 275 },
      { id: 51, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", code: "09.03.01", budgetPlaces: 150, passingScore: 290 },
      { id: 52, name: "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è", code: "09.03.04", budgetPlaces: 120, passingScore: 261 },
      { id: 53, name: "–•–∏–º–∏—è", code: "04.03.01", budgetPlaces: 90, passingScore: 270 },
      { id: 54, name: "–ë–∏–æ–ª–æ–≥–∏—è", code: "06.03.01", budgetPlaces: 110, passingScore: 265 },
      { id: 55, name: "–ì–µ–æ–ª–æ–≥–∏—è", code: "05.03.01", budgetPlaces: 80, passingScore: 260 },
      { id: 56, name: "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", code: "05.03.02", budgetPlaces: 70, passingScore: 255 },
      { id: 57, name: "–ò—Å—Ç–æ—Ä–∏—è", code: "46.03.01", budgetPlaces: 85, passingScore: 275 },
      { id: 58, name: "–§–∏–ª–æ–ª–æ–≥–∏—è", code: "45.03.01", budgetPlaces: 95, passingScore: 280 },
      { id: 59, name: "–≠–∫–æ–Ω–æ–º–∏–∫–∞", code: "38.03.01", budgetPlaces: 100, passingScore: 285 },
      { id: 60, name: "–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è", code: "40.03.01", budgetPlaces: 90, passingScore: 290 },
      { id: 61, name: "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", code: "37.03.01", budgetPlaces: 60, passingScore: 285 },
    ],
  },
  {
    id: 6,
    name: "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
    shortName: "–ù–ì–£",
    logo: "üß¨",
    directions: [
      { id: 62, name: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", code: "01.03.01", budgetPlaces: 120, passingScore: 320 },
      { id: 63, name: "–§–∏–∑–∏–∫–∞", code: "03.03.02", budgetPlaces: 140, passingScore: 315 },
      { id: 64, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", code: "09.03.01", budgetPlaces: 160, passingScore: 330 },
      { id: 65, name: "–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", code: "01.03.02", budgetPlaces: 120, passingScore: 325 },
      { id: 66, name: "–ë–∏–æ–ª–æ–≥–∏—è", code: "06.03.01", budgetPlaces: 120, passingScore: 305 },
    ],
  },
  {
    id: 7,
    name: "–°–∏–±–∏—Ä—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
    shortName: "–°–§–£",
    logo: "üå≤",
    directions: [
      { id: 67, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", code: "09.03.01", budgetPlaces: 200, passingScore: 275 },
      { id: 68, name: "–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ", code: "15.03.01", budgetPlaces: 180, passingScore: 260 },
      { id: 69, name: "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞", code: "13.03.02", budgetPlaces: 150, passingScore: 265 },
      { id: 70, name: "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ", code: "08.03.01", budgetPlaces: 220, passingScore: 250 },
      { id: 71, name: "–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞", code: "15.03.06", budgetPlaces: 120, passingScore: 270 },
    ],
  },
  {
    id: 8,
    name: "–£—Ä–∞–ª—å—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
    shortName: "–£—Ä–§–£",
    logo: "‚õ∞Ô∏è",
    directions: [
      { id: 72, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", code: "09.03.01", budgetPlaces: 180, passingScore: 285 },
      { id: 73, name: "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è", code: "09.03.04", budgetPlaces: 160, passingScore: 295 },
      { id: 74, name: "–≠–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞", code: "13.03.02", budgetPlaces: 160, passingScore: 280 },
      { id: 75, name: "–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ", code: "15.03.01", budgetPlaces: 200, passingScore: 270 },
      { id: 76, name: "–§–∏–∑–∏–∫–∞", code: "03.03.02", budgetPlaces: 90, passingScore: 280 },
    ],
  },
]

// ------------------------ –ë–ê–ó–û–í–´–ï –û–õ–ò–ú–ü–ò–ê–î–´ –ü–û –ü–†–û–§–ò–õ–Æ ------------------------
const olympiads: Record<number, Olympiad[]> = {
  1: [
    {
      id: 1,
      name: "–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ (–í—Å–û–®)",
      level: "–í—Å–û–®",
      type: "–ë–í–ò",
      subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
      validYears: "10-11 –∫–ª–∞—Å—Å",
      registration: "2025-09-01",
      qualifying: "2025-10-15",
      final: "2026-04-10",
      features: "–°–∞–º–∞—è –ø—Ä–µ—Å—Ç–∏–∂–Ω–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ. –ë–í–ò –≤ –≤–µ–¥—É—â–∏–µ –≤—É–∑—ã –†–æ—Å—Å–∏–∏",
    },
    {
      id: 2,
      name: "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
      level: 1,
      type: "–ë–í–ò",
      subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2025-09-15",
      qualifying: "2025-11-01",
      final: "2026-03-15",
      features: "–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è. –ë–í–ò –≤ –ú–ì–£, –ú–§–¢–ò, –í–®–≠",
    },
    {
      id: 3,
      name: "–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–õ–æ–º–æ–Ω–æ—Å–æ–≤¬ª",
      level: 1,
      type: "–ë–í–ò",
      subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
      validYears: "10-11 –∫–ª–∞—Å—Å",
      registration: "2025-10-01",
      qualifying: "2025-11-15",
      final: "2026-01-20",
      features: "–û–ª–∏–º–ø–∏–∞–¥–∞ –ú–ì–£ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ. –ë–í–ò –Ω–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
    },
  ],
  2: [
    {
      id: 4,
      name: "–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ —Ñ–∏–∑–∏–∫–µ (–í—Å–û–®)",
      level: "–í—Å–û–®",
      type: "–ë–í–ò",
      subject: "–§–∏–∑–∏–∫–∞",
      validYears: "10-11 –∫–ª–∞—Å—Å",
      registration: "2025-09-01",
      qualifying: "2025-10-20",
      final: "2026-04-12",
      features: "–í–∫–ª—é—á–∞–µ—Ç —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Ç—É—Ä—ã. –ë–í–ò –Ω–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
    },
    {
      id: 5,
      name: "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
      level: 1,
      type: "–ë–í–ò",
      subject: "–§–∏–∑–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2025-09-15",
      qualifying: "2025-11-05",
      final: "2026-04-18",
      features: "–°–∏–ª—å–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ú–æ—Å–∫–≤—ã. –ë–í–ò –≤ –ú–§–¢–ò, –ú–ì–£",
    },
  ],
  3: [
    {
      id: 6,
      name: "–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ (–í—Å–û–®)",
      level: "–í—Å–û–®",
      type: "–ë–í–ò",
      subject: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
      validYears: "10-11 –∫–ª–∞—Å—Å",
      registration: "2025-09-01",
      qualifying: "2025-10-25",
      final: "2026-04-20",
      features: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Pascal, C++, Python. –ë–í–ò –Ω–∞ IT-–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
    },
    {
      id: 7,
      name: "–û—Ç–∫—Ä—ã—Ç–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é",
      level: 1,
      type: "–ë–í–ò",
      subject: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2025-10-01",
      qualifying: "2025-11-10",
      final: "2026-01-15",
      features: "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ. –ë–í–ò –≤ –ò–¢–ú–û, –ú–§–¢–ò, –ú–ì–£",
    },
  ],
  4: [
    {
      id: 8,
      name: "–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–í—ã—Å—à–∞—è –ø—Ä–æ–±–∞¬ª",
      level: 1,
      type: "–ë–í–ò",
      subject: "–≠–∫–æ–Ω–æ–º–∏–∫–∞",
      validYears: "10-11 –∫–ª–∞—Å—Å",
      registration: "2025-10-01",
      qualifying: "2025-11-20",
      final: "2026-02-10",
      features: "–û–ª–∏–º–ø–∏–∞–¥–∞ –ù–ò–£ –í–®–≠ –ø–æ —ç–∫–æ–Ω–æ–º–∏–∫–µ. –ë–í–ò –Ω–∞ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
    },
    {
      id: 9,
      name: "–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –∏–º–µ–Ω–∏ –ù.–î. –ö–æ–Ω–¥—Ä–∞—Ç—å–µ–≤–∞",
      level: 1,
      type: "–ë–í–ò",
      subject: "–≠–∫–æ–Ω–æ–º–∏–∫–∞",
      validYears: "10-11 –∫–ª–∞—Å—Å",
      registration: "2025-09-20",
      qualifying: "2025-11-25",
      final: "2026-01-25",
      features: "–ü—Ä–µ—Å—Ç–∏–∂–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞. –ë–í–ò –≤ –≤–µ–¥—É—â–∏–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –≤—É–∑—ã",
    },
  ],
}

// ------------------------ –ì–ï–ù–ï–†–ê–¶–ò–Ø –ü–û –ü–†–û–§–ò–õ–Æ ------------------------
const generateOlympiadsForDirection = (directionId: number, directionName: string): Olympiad[] => {
  const baseOlympiads: Olympiad[] = []

  let subject = "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"
  if (directionName.toLowerCase().includes("—Ñ–∏–∑")) subject = "–§–∏–∑–∏–∫–∞"
  else if (
      directionName.includes("–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞") ||
      directionName.includes("–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è") ||
      directionName.toLowerCase().includes("–∏–Ω—Ñ–æ—Ä–º")
  )
    subject = "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"
  else if (directionName.toLowerCase().includes("—ç–∫–æ–Ω–æ–º")) subject = "–≠–∫–æ–Ω–æ–º–∏–∫–∞"
  else if (directionName.toLowerCase().includes("—Ö–∏–º")) subject = "–•–∏–º–∏—è"
  else if (directionName.toLowerCase().includes("–±–∏–æ")) subject = "–ë–∏–æ–ª–æ–≥–∏—è"
  else if (directionName.toLowerCase().includes("–∏—Å—Ç–æ—Ä")) subject = "–ò—Å—Ç–æ—Ä–∏—è"
  else if (directionName.toLowerCase().includes("—Ñ–∏–ª–æ–ª–æ–≥") || directionName.toLowerCase().includes("–ª–∏–Ω–≥–≤"))
    subject = "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫"
  else if (directionName.toLowerCase().includes("–∂—É—Ä–Ω–∞–ª–∏—Å—Ç")) subject = "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞"
  else if (directionName.toLowerCase().includes("—é—Ä–∏—Å–ø—Ä—É–¥")) subject = "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ"
  else if (directionName.toLowerCase().includes("–≥–µ–æ–ª–æ–≥") || directionName.toLowerCase().includes("–≥–µ–æ–≥—Ä–∞—Ñ"))
    subject = "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è"

  baseOlympiads.push({
    id: directionId * 1000,
    name: `–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ ${subject.toLowerCase()} (–í—Å–û–®)`,
    level: "–í—Å–û–®",
    type: "–ë–í–ò",
    subject,
    validYears: "10-11 –∫–ª–∞—Å—Å",
    registration: "2025-09-01",
    qualifying: "2025-10-15",
    final: "2026-04-10",
    features: `–°–∞–º–∞—è –ø—Ä–µ—Å—Ç–∏–∂–Ω–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ ${subject.toLowerCase()}. –î–∞–µ—Ç –ë–í–ò –Ω–∞ –≤—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ –ø—Ä–æ—Ñ–∏–ª—é.`,
  })

  if (subject === "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞") {
    baseOlympiads.push({
      id: directionId * 1000 + 1,
      name: "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
      level: 1,
      type: "–ë–í–ò",
      subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2025-09-15",
      qualifying: "2025-11-01",
      final: "2026-03-15",
      features: "–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è",
    })
    baseOlympiads.push({
      id: directionId * 1000 + 2,
      name: "–¢—É—Ä–Ω–∏—Ä –≥–æ—Ä–æ–¥–æ–≤",
      level: 1,
      type: "–ë–í–ò",
      subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
      validYears: "8-11 –∫–ª–∞—Å—Å",
      registration: "2025-09-20",
      qualifying: "2025-10-20",
      final: "2026-03-20",
      features: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞",
    })
  } else if (subject === "–§–∏–∑–∏–∫–∞") {
    baseOlympiads.push({
      id: directionId * 1000 + 1,
      name: "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
      level: 1,
      type: "–ë–í–ò",
      subject: "–§–∏–∑–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2025-09-15",
      qualifying: "2025-11-05",
      final: "2026-04-18",
      features: "–°–∏–ª—å–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ú–æ—Å–∫–≤—ã",
    })
    baseOlympiads.push({
      id: directionId * 1000 + 2,
      name: "–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–§–∏–∑—Ç–µ—Ö¬ª",
      level: 1,
      type: "–ë–í–ò",
      subject: "–§–∏–∑–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2025-10-01",
      qualifying: "2025-11-10",
      final: "2026-01-25",
      features: "–û–ª–∏–º–ø–∏–∞–¥–∞ –ú–§–¢–ò –ø–æ —Ñ–∏–∑–∏–∫–µ",
    })
  } else if (subject === "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞") {
    baseOlympiads.push({
      id: directionId * 1000 + 1,
      name: "–û—Ç–∫—Ä—ã—Ç–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é",
      level: 1,
      type: "–ë–í–ò",
      subject: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2025-10-01",
      qualifying: "2025-11-10",
      final: "2026-01-15",
      features: "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
    })
    baseOlympiads.push({
      id: directionId * 1000 + 2,
      name: "–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é ¬´–¢–µ—Ö–Ω–æ–ö—É–±–æ–∫¬ª",
      level: 2,
      type: "100 –±–∞–ª–ª–æ–≤",
      subject: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
      validYears: "8-11 –∫–ª–∞—Å—Å",
      registration: "2025-09-25",
      qualifying: "2025-11-15",
      final: "2026-01-20",
      features: "–î–∞—ë—Ç 100 –±–∞–ª–ª–æ–≤ –ï–ì–≠ (–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ 75+), –±–µ–∑ –ë–í–ò –¥–ª—è —Ä—è–¥–∞ –≤—É–∑–æ–≤",
    })
  }

  return baseOlympiads
}

const UniversitySelection = ({ onAddToCalendar }: UniversitySelectionProps) => {
  const [selectedOlympiads, setSelectedOlympiads] = useState<number[]>([])
  const [selectedDirection, setSelectedDirection] = useState<number | null>(null)
  const [selectedUniversity, setSelectedUniversity] = useState<number | null>(null)
  const [searchQuery, setSearchQuery] = useState("")
  const [modalData, setModalData] = useState<{
    isOpen: boolean
    olympiad?: Olympiad
    eventType?: "registration" | "qualifying" | "final"
  }>({ isOpen: false })

  const handleSelectOlympiad = (olympiadId: number) => {
    setSelectedOlympiads((prev) =>
        prev.includes(olympiadId) ? prev.filter((id) => id !== olympiadId) : [...prev, olympiadId],
    )
  }

  const directionOlympiads = selectedDirection
      ? generateOlympiadsForDirection(
          selectedDirection,
          universities.flatMap((u) => u.directions).find((d) => d.id === selectedDirection)?.name || "",
      )
      : []

  const showEventModal = (olympiad: Olympiad, eventType: "registration" | "qualifying" | "final") => {
    setModalData({
      isOpen: true,
      olympiad,
      eventType,
    })
  }

  const handleAddToCalendar = (event: CalendarEvent) => {
    console.log("[v0] UniversitySelection received event to add:", event)
    console.log("[v0] onAddToCalendar prop exists:", !!onAddToCalendar)

    if (onAddToCalendar) {
      console.log("[v0] Calling onAddToCalendar with event:", event)
      onAddToCalendar(event)
    } else {
      console.log("[v0] ERROR: onAddToCalendar prop is missing!")
    }
    setModalData({ isOpen: false })
  }

  const filteredUniversities = universities.filter(
      (university) =>
          university.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
          university.shortName.toLowerCase().includes(searchQuery.toLowerCase()),
  )

  const subjectFromDirection = (name?: string) => {
    if (!name) return "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"
    const n = name.toLowerCase()
    if (n.includes("—Ñ–∏–∑")) return "–§–∏–∑–∏–∫–∞"
    if (n.includes("–∏–Ω—Ñ–æ—Ä–º") || n.includes("–ø—Ä–æ–≥—Ä–∞–º–º")) return "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"
    if (n.includes("—Ö–∏–º")) return "–•–∏–º–∏—è"
    if (n.includes("–±–∏–æ")) return "–ë–∏–æ–ª–æ–≥–∏—è"
    if (n.includes("—ç–∫–æ–Ω")) return "–≠–∫–æ–Ω–æ–º–∏–∫–∞"
    if (n.includes("—é—Ä–∏—Å–ø—Ä—É–¥")) return "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ"
    if (n.includes("–≥–µ–æ–ª–æ–≥") || n.includes("–≥–µ–æ–≥—Ä–∞—Ñ")) return "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è"
    return "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"
  }

  const directionContext = useMemo(() => {
    if (!selectedDirection) return null
    const direction = universities.flatMap((u) => u.directions).find((d) => d.id === selectedDirection)
    const uni = universities.find((u) => u.directions.some((d) => d.id === selectedDirection))
    const subj = subjectFromDirection(direction?.name)
    return { direction, uni, subj }
  }, [selectedDirection])

  // ===================== –í–ï–¢–ö–ê 1: –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï =====================
  if (selectedDirection) {
    const direction = universities.flatMap((u) => u.directions).find((d) => d.id === selectedDirection)
    const university = universities.find((u) => u.directions.some((d) => d.id === selectedDirection))

    return (
        <div className="p-4 space-y-4" style={{ backgroundColor: "#F6F7FA" }}>
          <div className="flex items-center gap-2 mb-4">
            <Button
                variant="ghost"
                size="sm"
                onClick={() => setSelectedDirection(null)}
                style={{ color: "#051F45" }}
                className="hover:bg-white"
            >
              ‚Üê –ù–∞–∑–∞–¥
            </Button>
          </div>

          <div
              className="p-6 rounded-lg mb-6 border"
              style={{
                background: "linear-gradient(135deg, #F2C4CD 0%, #F6F7FA 100%)",
                borderColor: "#98A2B3",
              }}
          >
            <div className="flex items-center gap-3 mb-2">
              <span className="text-2xl">{university?.logo}</span>
              <div>
                <h2 className="text-xl font-bold" style={{ color: "#051F45" }}>
                  {direction?.name}
                </h2>
                <p className="text-sm" style={{ color: "#98A2B3" }}>
                  {university?.shortName}
                </p>
              </div>
            </div>
            <div className="flex gap-2 mt-3">
              <Badge variant="outline" className="text-xs" style={{ borderColor: "#051F45", color: "#051F45" }}>
                –ë—é–¥–∂–µ—Ç: {direction?.budgetPlaces} –º–µ—Å—Ç
              </Badge>
              <Badge variant="outline" className="text-xs" style={{ borderColor: "#051F45", color: "#051F45" }}>
                –ü—Ä–æ—Ö–æ–¥–Ω–æ–π: {direction?.passingScore}+ –±–∞–ª–ª–æ–≤
              </Badge>
            </div>
          </div>

          <div className="p-4 rounded-lg mb-4 border" style={{ backgroundColor: "white", borderColor: "#98A2B3" }}>
            <div className="flex items-start gap-2">
              <Info className="h-4 w-4 mt-0.5" style={{ color: "#051F45" }} />
              <div className="text-sm">
                <p style={{ color: "#051F45" }} className="font-medium mb-1">
                  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ë–í–ò (–ë–µ–∑ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π):
                </p>
                <p style={{ color: "#98A2B3" }}>
                  {university?.shortName === "–¢–ì–£"
                      ? "–í –¢–ì–£ –ª—é–±–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –∏–∑ –ø–µ—Ä–µ—á–Ω—è –†–°–û–® –¥–∞–µ—Ç –ø—Ä–∞–≤–æ –Ω–∞ –ë–í–ò –ø—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
                      : "–õ—é–±–∞—è –ø—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ 1 —É—Ä–æ–≤–Ω—è –¥–∞–µ—Ç –ë–í–ò –ø—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è."}
                </p>
              </div>
            </div>
          </div>

          <div className="space-y-4">
            <h3 className="text-lg font-semibold flex items-center gap-2" style={{ color: "#051F45" }}>
              <Trophy className="h-5 w-5" style={{ color: "#F2C4CD" }} />
              –û–ª–∏–º–ø–∏–∞–¥—ã –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è
            </h3>

            {directionOlympiads.map((olympiad) => (
                <Card
                    key={olympiad.id}
                    className="p-4 hover:shadow-md transition-shadow"
                    style={{ backgroundColor: "white", borderColor: "#98A2B3" }}
                >
                  <div className="space-y-3">
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        <h4 className="font-semibold mb-2" style={{ color: "#051F45" }}>
                          {olympiad.name}
                        </h4>
                        <div className="flex gap-2 mb-2">
                          <Badge variant="outline" className="text-xs" style={{ borderColor: "#051F45", color: "#051F45" }}>
                            {typeof olympiad.level === "number" ? `${olympiad.level} —É—Ä–æ–≤–µ–Ω—å` : olympiad.level}
                          </Badge>
                          <Badge variant="outline" className="text-xs" style={{ borderColor: "#051F45", color: "#051F45" }}>
                            {olympiad.subject}
                          </Badge>
                          <Badge
                              variant={olympiad.type === "–ë–í–ò" ? "default" : "secondary"}
                              className="text-xs"
                              style={{
                                backgroundColor: olympiad.type === "–ë–í–ò" ? "#051F45" : "#98A2B3",
                                color: "white",
                              }}
                          >
                            {olympiad.type}
                          </Badge>
                        </div>
                        <p className="text-sm mb-3" style={{ color: "#98A2B3" }}>
                          {olympiad.features}
                        </p>
                      </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-3 gap-2">
                      <Button
                          variant="outline"
                          size="sm"
                          onClick={() => showEventModal(olympiad, "registration")}
                          className="flex items-center gap-2 hover:bg-blue-50"
                          style={{
                            color: "#051F45",
                            borderColor: "#F2C4CD",
                            backgroundColor: "rgba(242, 196, 205, 0.1)",
                          }}
                      >
                        <Calendar className="h-3 w-3" />
                        –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                        <span className="text-xs" style={{ color: "#98A2B3" }}>
                      {new Date(olympiad.registration).toLocaleDateString("ru")}
                    </span>
                      </Button>

                      <Button
                          variant="outline"
                          size="sm"
                          onClick={() => showEventModal(olympiad, "qualifying")}
                          className="flex items-center gap-2 hover:bg-yellow-50"
                          style={{
                            color: "#051F45",
                            borderColor: "#F2C4CD",
                            backgroundColor: "rgba(242, 196, 205, 0.1)",
                          }}
                      >
                        <Clock className="h-3 w-3" />
                        –û—Ç–±–æ—Ä–æ—á–Ω—ã–π
                        <span className="text-xs" style={{ color: "#98A2B3" }}>
                      {new Date(olympiad.qualifying).toLocaleDateString("ru")}
                    </span>
                      </Button>

                      <Button
                          variant="outline"
                          size="sm"
                          onClick={() => showEventModal(olympiad, "final")}
                          className="flex items-center gap-2 hover:bg-green-50"
                          style={{
                            color: "#051F45",
                            borderColor: "#F2C4CD",
                            backgroundColor: "rgba(242, 196, 205, 0.1)",
                          }}
                      >
                        <Trophy className="h-3 w-3" />
                        –ó–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–π
                        <span className="text-xs" style={{ color: "#98A2B3" }}>
                      {new Date(olympiad.final).toLocaleDateString("ru")}
                    </span>
                      </Button>
                    </div>
                  </div>
                </Card>
            ))}
          </div>

          {modalData.isOpen && modalData.olympiad && modalData.eventType && (
              <EventModal
                  isOpen={modalData.isOpen}
                  onClose={() => setModalData({ isOpen: false })}
                  onAddToCalendar={handleAddToCalendar}
                  olympiadName={modalData.olympiad.name}
                  eventType={modalData.eventType}
                  date={
                    modalData.eventType === "registration"
                        ? modalData.olympiad.registration
                        : modalData.eventType === "qualifying"
                            ? modalData.olympiad.qualifying
                            : modalData.olympiad.final
                  }
                  subject={modalData.olympiad.subject}
                  level={modalData.olympiad.level}
                  features={modalData.olympiad.features}
              />
          )}
        </div>
    )
  }

  // ===================== –í–ï–¢–ö–ê 2: –≤—ã–±—Ä–∞–Ω –í–£–ó (–ù–û –Ω–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ) =====================
  if (selectedUniversity) {
    const university = universities.find((u) => u.id === selectedUniversity)

    return (
        <div className="p-4 space-y-4" style={{ backgroundColor: "#F6F7FA" }}>
          <div className="flex items-center gap-2 mb-4">
            <Button
                variant="ghost"
                size="sm"
                onClick={() => setSelectedUniversity(null)}
                style={{ color: "#051F45" }}
                className="hover:bg-white"
            >
              ‚Üê –ù–∞–∑–∞–¥
            </Button>
          </div>

          <div className="text-center mb-6">
            <div className="text-4xl mb-2">{university?.logo}</div>
            <h2 className="text-lg font-bold" style={{ color: "#051F45" }}>
              {university?.name}
            </h2>
            <p className="text-sm" style={{ color: "#98A2B3" }}>
              –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            </p>
          </div>

          <div className="space-y-3">
            {university?.directions.map((direction) => (
                <Card
                    key={direction.id}
                    className="p-4 hover:shadow-md transition-all cursor-pointer border"
                    style={{ backgroundColor: "white", borderColor: "#98A2B3" }}
                    onClick={() => setSelectedDirection(direction.id)}
                >
                  <div className="flex justify-between items-start">
                    <div>
                      <h3 className="font-semibold" style={{ color: "#051F45" }}>
                        {direction.name}
                      </h3>
                      <p className="text-xs" style={{ color: "#98A2B3" }}>{direction.code}</p>
                      <div className="flex gap-4 mt-2 text-xs" style={{ color: "#98A2B3" }}>
                    <span>
                      –ë—é–¥–∂–µ—Ç: <span style={{ color: "#051F45" }}>{direction.budgetPlaces}</span>
                    </span>
                        <span>
                      –ü—Ä–æ—Ö–æ–¥–Ω–æ–π: <span style={{ color: "#051F45" }}>{direction.passingScore}</span>
                    </span>
                      </div>
                    </div>
                    <div className="text-xl" style={{ color: "#98A2B3" }}>‚Üí</div>
                  </div>
                </Card>
            ))}
          </div>
        </div>
    )
  }

  // ===================== –í–ï–¢–ö–ê 3: —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω (–≤—ã–±–æ—Ä –í–£–ó–∞) =====================
  return (
      <div className="p-4 space-y-4" style={{ backgroundColor: "#F6F7FA" }}>
        <div className="text-center mb-6">
          <h1 className="text-2xl font-bold mb-2" style={{ color: "#051F45" }}>
            –í—ã–±–µ—Ä–∏—Ç–µ –≤—É–∑
          </h1>
          <p className="text-sm" style={{ color: "#98A2B3" }}>
            –ù–∞–π–¥–∏—Ç–µ –æ–ª–∏–º–ø–∏–∞–¥—ã –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è
          </p>
        </div>

        <Input
            type="text"
            placeholder="–ü–æ–∏—Å–∫ –≤—É–∑–∞..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="mb-4"
            style={{ borderColor: "#98A2B3" }}
        />

        <div className="space-y-3">
          {filteredUniversities.map((university) => (
              <Card
                  key={university.id}
                  className="p-4 hover:shadow-md transition-all cursor-pointer border"
                  style={{ backgroundColor: "white", borderColor: "#98A2B3" }}
                  onClick={() => setSelectedUniversity(university.id)}
              >
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-3">
                    <div className="text-2xl">{university.logo}</div>
                    <div>
                      <h3 className="font-semibold text-base" style={{ color: "#051F45" }}>
                        {university.shortName}
                      </h3>
                      <p className="text-sm" style={{ color: "#98A2B3" }}>
                        {university.name}
                      </p>
                      <p className="text-xs mt-1" style={{ color: "#F2C4CD" }}>
                        {university.directions.length} –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
                      </p>
                    </div>
                  </div>
                  <div className="text-xl" style={{ color: "#98A2B3" }}>
                    ‚Üí
                  </div>
                </div>
              </Card>
          ))}
        </div>
      </div>
  )
}

export { UniversitySelection }

