"use client"

import { useMemo, useState } from "react"
import { Button } from "@/components/ui/button"
import { Card } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"

interface Direction {
  id: number
  name: string
  code: string
  budgetPlaces: number
  passingScore: number
}

interface University {
  id: number
  name: string
  shortName: string
  logo: string
  directions: Direction[]
}

type OlympiadType = "–ë–í–ò" | "100 –±–∞–ª–ª–æ–≤"

interface Olympiad {
  id: number
  name: string
  level: string | number
  type: OlympiadType
  subject: string
  validYears: string
  registration: string
  qualifying: string
  final: string
  features: string
  // NEW (–¥–ª—è –≤—É–∑-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª)
  faculty?: string
  groups?: string[]                  // –ö–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã
  requirementNote?: string           // –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –ø—Ä–æ 75+ –∏ —Ç.–ø.
  appliesToSubjects?: string[]       // –î–ª—è –∫–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –∑–∞–ø–∏—Å—å
  universityShortName?: string       // –ù–∞–ø—Ä–∏–º–µ—Ä "–ú–§–¢–ò" / "–ò–¢–ú–û" / "–¢–ì–£"
}

// ------------------------ –¢–í–û–ò –î–ê–ù–ù–´–ï –í–£–ó–û–í ------------------------
const universities: University[] = [
  {
    id: 1,
    name: "–ú–ì–£ –∏–º. –ú.–í. –õ–æ–º–æ–Ω–æ—Å–æ–≤–∞",
    shortName: "–ú–ì–£",
    logo: "üèõÔ∏è",
    directions: [
      { id: 1, name: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", code: "01.03.01", budgetPlaces: 120, passingScore: 350 },
      { id: 2, name: "–§–∏–∑–∏–∫–∞", code: "03.03.02", budgetPlaces: 180, passingScore: 340 },
      { id: 3, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", code: "09.03.01", budgetPlaces: 90, passingScore: 360 },
      { id: 4, name: "–≠–∫–æ–Ω–æ–º–∏–∫–∞", code: "38.03.01", budgetPlaces: 150, passingScore: 380 },
      { id: 5, name: "–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç–∏–∫–∞", code: "42.03.02", budgetPlaces: 80, passingScore: 370 },
      { id: 6, name: "–•–∏–º–∏—è", code: "04.03.01", budgetPlaces: 140, passingScore: 330 },
      { id: 7, name: "–ë–∏–æ–ª–æ–≥–∏—è", code: "06.03.01", budgetPlaces: 160, passingScore: 320 },
      { id: 8, name: "–ò—Å—Ç–æ—Ä–∏—è", code: "46.03.01", budgetPlaces: 100, passingScore: 350 },
      { id: 9, name: "–§–∏–ª–æ–ª–æ–≥–∏—è", code: "45.03.01", budgetPlaces: 120, passingScore: 340 },
      { id: 10, name: "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", code: "37.03.01", budgetPlaces: 70, passingScore: 365 },
      { id: 11, name: "–°–æ—Ü–∏–æ–ª–æ–≥–∏—è", code: "39.03.01", budgetPlaces: 60, passingScore: 355 },
      { id: 12, name: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è", code: "41.03.05", budgetPlaces: 50, passingScore: 385 },
    ],
  },
  {
    id: 2,
    name: "–ú–ì–¢–£ –∏–º. –ù.–≠. –ë–∞—É–º–∞–Ω–∞",
    shortName: "–ë–∞—É–º–∞–Ω–∫–∞",
    logo: "‚öôÔ∏è",
    directions: [
      { id: 13, name: "–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ", code: "15.03.01", budgetPlaces: 200, passingScore: 280 },
      { id: 14, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", code: "09.03.01", budgetPlaces: 180, passingScore: 320 },
      {
        id: 15,
        name: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
        code: "15.03.04",
        budgetPlaces: 150,
        passingScore: 290,
      },
      { id: 16, name: "–†–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏–∫–∞", code: "11.03.01", budgetPlaces: 120, passingScore: 300 },
      { id: 17, name: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –Ω–∞–Ω–æ—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", code: "11.03.04", budgetPlaces: 100, passingScore: 310 },
      { id: 18, name: "–†–∞–∫–µ—Ç–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã –∏ –∫–æ—Å–º–æ–Ω–∞–≤—Ç–∏–∫–∞", code: "24.03.01", budgetPlaces: 80, passingScore: 330 },
      { id: 19, name: "–ê–≤–∏–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", code: "24.03.04", budgetPlaces: 90, passingScore: 320 },
      { id: 20, name: "–ú–∞—Ç–µ—Ä–∏–∞–ª–æ–≤–µ–¥–µ–Ω–∏–µ", code: "22.03.01", budgetPlaces: 70, passingScore: 285 },
      { id: 21, name: "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–µ –º–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ", code: "13.03.03", budgetPlaces: 110, passingScore: 295 },
      { id: 22, name: "–ë–∏–æ–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è", code: "12.03.04", budgetPlaces: 60, passingScore: 305 },
      { id: 23, name: "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è", code: "09.03.04", budgetPlaces: 140, passingScore: 325 },
      { id: 24, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", code: "10.03.01", budgetPlaces: 80, passingScore: 315 },
    ],
  },
  {
    id: 3,
    name: "–ú–§–¢–ò",
    shortName: "–ú–§–¢–ò",
    logo: "üöÄ",
    directions: [
      { id: 25, name: "–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ —Ñ–∏–∑–∏–∫–∞", code: "03.03.01", budgetPlaces: 300, passingScore: 340 },
      { id: 26, name: "–§–∏–∑–∏–∫–∞", code: "03.03.02", budgetPlaces: 200, passingScore: 330 },
      { id: 27, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", code: "09.03.01", budgetPlaces: 180, passingScore: 350 },
      { id: 28, name: "–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", code: "01.03.02", budgetPlaces: 150, passingScore: 345 },
      { id: 29, name: "–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", code: "27.03.03", budgetPlaces: 100, passingScore: 320 },
      { id: 30, name: "–ë–∏–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", code: "12.03.01", budgetPlaces: 80, passingScore: 310 },
      { id: 31, name: "–†–∞–¥–∏–æ—Ñ–∏–∑–∏–∫–∞", code: "03.03.03", budgetPlaces: 90, passingScore: 325 },
      { id: 32, name: "–ê—ç—Ä–æ–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", code: "24.03.02", budgetPlaces: 70, passingScore: 335 },
      { id: 33, name: "–≠–∫–æ–Ω–æ–º–∏–∫–∞", code: "38.03.01", budgetPlaces: 60, passingScore: 340 },
      { id: 34, name: "–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç", code: "38.03.02", budgetPlaces: 50, passingScore: 330 },
      { id: 35, name: "–•–∏–º–∏—è", code: "04.03.01", budgetPlaces: 40, passingScore: 315 },
      { id: 36, name: "–ë–∏–æ–ª–æ–≥–∏—è", code: "06.03.01", budgetPlaces: 45, passingScore: 305 },
    ],
  },
  {
    id: 4,
    name: "–°–ü–±–ì–£",
    shortName: "–°–ü–±–ì–£",
    logo: "üè∞",
    directions: [
      { id: 37, name: "–§–∏–ª–æ–ª–æ–≥–∏—è", code: "45.03.01", budgetPlaces: 90, passingScore: 290 },
      { id: 38, name: "–ò—Å—Ç–æ—Ä–∏—è", code: "46.03.01", budgetPlaces: 85, passingScore: 285 },
      { id: 39, name: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", code: "01.03.01", budgetPlaces: 100, passingScore: 320 },
      { id: 40, name: "–§–∏–∑–∏–∫–∞", code: "03.03.02", budgetPlaces: 120, passingScore: 310 },
      { id: 41, name: "–≠–∫–æ–Ω–æ–º–∏–∫–∞", code: "38.03.01", budgetPlaces: 91, passingScore: 291 },
      { id: 42, name: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è", code: "41.03.05", budgetPlaces: 84, passingScore: 284 },
      { id: 43, name: "–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç–∏–∫–∞", code: "42.03.02", budgetPlaces: 70, passingScore: 300 },
      { id: 44, name: "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", code: "37.03.01", budgetPlaces: 80, passingScore: 295 },
      { id: 45, name: "–°–æ—Ü–∏–æ–ª–æ–≥–∏—è", code: "39.03.01", budgetPlaces: 60, passingScore: 280 },
      { id: 46, name: "–§–∏–ª–æ—Å–æ—Ñ–∏—è", code: "47.03.01", budgetPlaces: 50, passingScore: 275 },
      { id: 47, name: "–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è", code: "40.03.01", budgetPlaces: 110, passingScore: 305 },
      { id: 48, name: "–•–∏–º–∏—è", code: "04.03.01", budgetPlaces: 90, passingScore: 290 },
    ],
  },
  {
    id: 5,
    name: "–ò–¢–ú–û",
    shortName: "–ò–¢–ú–û",
    logo: "üíª",
    directions: [
      { id: 49, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", code: "09.03.01", budgetPlaces: 295, passingScore: 295 },
      { id: 50, name: "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è", code: "09.03.04", budgetPlaces: 310, passingScore: 310 },
      { id: 51, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", code: "09.03.02", budgetPlaces: 310, passingScore: 310 },
      { id: 52, name: "–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", code: "01.03.02", budgetPlaces: 310, passingScore: 310 },
      { id: 53, name: "–§–æ—Ç–æ–Ω–∏–∫–∞ –∏ –æ–ø—Ç–æ–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", code: "12.03.03", budgetPlaces: 180, passingScore: 280 },
      { id: 54, name: "–ë–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è", code: "19.03.01", budgetPlaces: 120, passingScore: 270 },
      { id: 55, name: "–î–∏–∑–∞–π–Ω", code: "54.03.01", budgetPlaces: 100, passingScore: 260 },
      { id: 56, name: "–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç", code: "38.03.02", budgetPlaces: 80, passingScore: 250 },
      { id: 57, name: "–≠–∫–æ–Ω–æ–º–∏–∫–∞", code: "38.03.01", budgetPlaces: 90, passingScore: 255 },
      { id: 58, name: "–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞", code: "15.03.06", budgetPlaces: 150, passingScore: 285 },
      { id: 59, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", code: "10.03.01", budgetPlaces: 281, passingScore: 281 },
      { id: 60, name: "–§–∏–∑–∏–∫–∞", code: "03.03.02", budgetPlaces: 283, passingScore: 283 },
    ],
  },
  // ... (–°–ü–±–ü–£, –¢–ì–£, –ù–ì–£, –°–§–£, –£—Ä–§–£ ‚Äî –æ—Å—Ç–∞–≤–∏–ª –∫–∞–∫ —É —Ç–µ–±—è)
  {
    id: 10,
    name: "–¢–æ–º—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
    shortName: "–¢–ì–£",
    logo: "üéì",
    directions: [
      { id: 109, name: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", code: "01.03.01", budgetPlaces: 100, passingScore: 280 },
      { id: 110, name: "–§–∏–∑–∏–∫–∞", code: "03.03.02", budgetPlaces: 120, passingScore: 275 },
      { id: 111, name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", code: "09.03.01", budgetPlaces: 150, passingScore: 290 },
      { id: 112, name: "–•–∏–º–∏—è", code: "04.03.01", budgetPlaces: 90, passingScore: 270 },
      { id: 113, name: "–ë–∏–æ–ª–æ–≥–∏—è", code: "06.03.01", budgetPlaces: 110, passingScore: 265 },
      { id: 114, name: "–ì–µ–æ–ª–æ–≥–∏—è", code: "05.03.01", budgetPlaces: 80, passingScore: 260 },
      { id: 115, name: "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", code: "05.03.02", budgetPlaces: 70, passingScore: 255 },
      { id: 116, name: "–ò—Å—Ç–æ—Ä–∏—è", code: "46.03.01", budgetPlaces: 85, passingScore: 275 },
      { id: 117, name: "–§–∏–ª–æ–ª–æ–≥–∏—è", code: "45.03.01", budgetPlaces: 95, passingScore: 280 },
      { id: 118, name: "–≠–∫–æ–Ω–æ–º–∏–∫–∞", code: "38.03.01", budgetPlaces: 100, passingScore: 285 },
      { id: 119, name: "–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è", code: "40.03.01", budgetPlaces: 90, passingScore: 290 },
      { id: 120, name: "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", code: "37.03.01", budgetPlaces: 60, passingScore: 285 },
    ],
  },
]

// ------------------------ –ë–ê–ó–û–í–´–ï –û–õ–ò–ú–ü–ò–ê–î–´ –ü–û –ü–†–û–§–ò–õ–Æ ------------------------
const olympiads: Record<number, Olympiad[]> = {
  // (–æ—Å—Ç–∞–≤–∏–ª —Ç–≤–æ–∏ –ø—Ä–∏–º–µ—Ä—ã –ú–ì–£ + –≥–µ–Ω–µ—Ä–∞—Ü–∏—é)
  1: [
    {
      id: 1,
      name: "–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ (–í—Å–û–®)",
      level: "–í—Å–û–®",
      type: "–ë–í–ò",
      subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
      validYears: "10-11 –∫–ª–∞—Å—Å",
      registration: "2024-09-01",
      qualifying: "2024-10-15",
      final: "2024-12-10",
      features: "–°–∞–º–∞—è –ø—Ä–µ—Å—Ç–∏–∂–Ω–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ",
    },
    {
      id: 2,
      name: "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
      level: 1,
      type: "–ë–í–ò",
      subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2024-09-15",
      qualifying: "2024-11-01",
      final: "2024-12-15",
      features: "–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è",
    },
    {
      id: 3,
      name: "–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–õ–æ–º–æ–Ω–æ—Å–æ–≤¬ª",
      level: 1,
      type: "–ë–í–ò",
      subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
      validYears: "10-11 –∫–ª–∞—Å—Å",
      registration: "2024-10-01",
      qualifying: "2024-11-15",
      final: "2025-01-20",
      features: "–û–ª–∏–º–ø–∏–∞–¥–∞ –ú–ì–£ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ",
    },
  ],
  2: [
    {
      id: 4,
      name: "–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ —Ñ–∏–∑–∏–∫–µ (–í—Å–û–®)",
      level: "–í—Å–û–®",
      type: "–ë–í–ò",
      subject: "–§–∏–∑–∏–∫–∞",
      validYears: "10-11 –∫–ª–∞—Å—Å",
      registration: "2024-09-01",
      qualifying: "2024-10-20",
      final: "2024-12-12",
      features: "–í–∫–ª—é—á–∞–µ—Ç —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Ç—É—Ä—ã",
    },
    {
      id: 5,
      name: "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
      level: 1,
      type: "–ë–í–ò",
      subject: "–§–∏–∑–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2024-09-15",
      qualifying: "2024-11-05",
      final: "2024-12-18",
      features: "–°–∏–ª—å–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ú–æ—Å–∫–≤—ã",
    },
  ],
  3: [
    {
      id: 6,
      name: "–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ (–í—Å–û–®)",
      level: "–í—Å–û–®",
      type: "–ë–í–ò",
      subject: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
      validYears: "10-11 –∫–ª–∞—Å—Å",
      registration: "2024-09-01",
      qualifying: "2024-10-25",
      final: "2024-12-20",
      features: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Pascal, C++, Python",
    },
    {
      id: 7,
      name: "–û—Ç–∫—Ä—ã—Ç–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é",
      level: 1,
      type: "–ë–í–ò",
      subject: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2024-10-01",
      qualifying: "2024-11-10",
      final: "2025-01-15",
      features: "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
    },
  ],
  4: [
    {
      id: 8,
      name: "–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–í—ã—Å—à–∞—è –ø—Ä–æ–±–∞¬ª",
      level: 1,
      type: "–ë–í–ò",
      subject: "–≠–∫–æ–Ω–æ–º–∏–∫–∞",
      validYears: "10-11 –∫–ª–∞—Å—Å",
      registration: "2024-10-01",
      qualifying: "2024-11-20",
      final: "2025-02-10",
      features: "–û–ª–∏–º–ø–∏–∞–¥–∞ –ù–ò–£ –í–®–≠ –ø–æ —ç–∫–æ–Ω–æ–º–∏–∫–µ",
    },
    {
      id: 9,
      name: "–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –∏–º–µ–Ω–∏ –ù.–î. –ö–æ–Ω–¥—Ä–∞—Ç—å–µ–≤–∞",
      level: 1,
      type: "–ë–í–ò",
      subject: "–≠–∫–æ–Ω–æ–º–∏–∫–∞",
      validYears: "10-11 –∫–ª–∞—Å—Å",
      registration: "2024-09-20",
      qualifying: "2024-11-25",
      final: "2025-01-25",
      features: "–ü—Ä–µ—Å—Ç–∏–∂–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞",
    },
  ],
}

// ------------------------ –ì–ï–ù–ï–†–ê–¶–ò–Ø –ü–û –ü–†–û–§–ò–õ–Æ (–æ—Å—Ç–∞–≤–∏–ª –∫–∞–∫ —É —Ç–µ–±—è) ------------------------
const generateOlympiadsForDirection = (directionId: number, directionName: string): Olympiad[] => {
  const baseOlympiads: Olympiad[] = []

  let subject = "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"
  if (directionName.toLowerCase().includes("—Ñ–∏–∑–∏–∫–∞")) subject = "–§–∏–∑–∏–∫–∞"
  else if (
      directionName.includes("–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞") ||
      directionName.includes("–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è") ||
      directionName.toLowerCase().includes("–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞")
  ) subject = "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"
  else if (directionName.toLowerCase().includes("—ç–∫–æ–Ω–æ–º")) subject = "–≠–∫–æ–Ω–æ–º–∏–∫–∞"
  else if (directionName.toLowerCase().includes("—Ö–∏–º")) subject = "–•–∏–º–∏—è"
  else if (directionName.toLowerCase().includes("–±–∏–æ")) subject = "–ë–∏–æ–ª–æ–≥–∏—è"
  else if (directionName.toLowerCase().includes("–∏—Å—Ç–æ—Ä")) subject = "–ò—Å—Ç–æ—Ä–∏—è"
  else if (directionName.toLowerCase().includes("—Ñ–∏–ª–æ–ª–æ–≥") || directionName.toLowerCase().includes("–ª–∏–Ω–≥–≤"))
    subject = "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫"
  else if (directionName.toLowerCase().includes("–∂—É—Ä–Ω–∞–ª–∏—Å—Ç")) subject = "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞"
  else if (directionName.toLowerCase().includes("—é—Ä–∏—Å–ø—Ä—É–¥")) subject = "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ"
  else if (directionName.toLowerCase().includes("–≥–µ–æ–≥—Ä–∞—Ñ") || directionName.toLowerCase().includes("–≥–µ–æ–ª–æ–≥"))
    subject = "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è"

  baseOlympiads.push({
    id: directionId * 1000,
    name: `–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ ${subject.toLowerCase()} (–í—Å–û–®)`,
    level: "–í—Å–û–®",
    type: "–ë–í–ò",
    subject: subject,
    validYears: "10-11 –∫–ª–∞—Å—Å",
    registration: "2024-09-01",
    qualifying: "2024-10-15",
    final: "2024-12-10",
    features: `–°–∞–º–∞—è –ø—Ä–µ—Å—Ç–∏–∂–Ω–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ ${subject.toLowerCase()}. –î–∞–µ—Ç –ë–í–ò –Ω–∞ –≤—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ –ø—Ä–æ—Ñ–∏–ª—é.`,
  })

  if (subject === "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞") {
    baseOlympiads.push({
      id: directionId * 1000 + 1,
      name: "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
      level: 1,
      type: "–ë–í–ò",
      subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2024-09-15",
      qualifying: "2024-11-01",
      final: "2024-12-15",
      features: "–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è",
    })
    baseOlympiads.push({
      id: directionId * 1000 + 2,
      name: "–¢—É—Ä–Ω–∏—Ä –≥–æ—Ä–æ–¥–æ–≤",
      level: 1,
      type: "–ë–í–ò",
      subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
      validYears: "8-11 –∫–ª–∞—Å—Å",
      registration: "2024-09-20",
      qualifying: "2024-10-20",
      final: "2024-12-20",
      features: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞",
    })
  } else if (subject === "–§–∏–∑–∏–∫–∞") {
    baseOlympiads.push({
      id: directionId * 1000 + 1,
      name: "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
      level: 1,
      type: "–ë–í–ò",
      subject: "–§–∏–∑–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2024-09-15",
      qualifying: "2024-11-05",
      final: "2024-12-18",
      features: "–°–∏–ª—å–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ú–æ—Å–∫–≤—ã",
    })
    baseOlympiads.push({
      id: directionId * 1000 + 2,
      name: "–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–§–∏–∑—Ç–µ—Ö¬ª",
      level: 1,
      type: "–ë–í–ò",
      subject: "–§–∏–∑–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2024-10-01",
      qualifying: "2024-11-10",
      final: "2025-01-25",
      features: "–û–ª–∏–º–ø–∏–∞–¥–∞ –ú–§–¢–ò –ø–æ —Ñ–∏–∑–∏–∫–µ",
    })
  } else if (subject === "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞") {
    baseOlympiads.push({
      id: directionId * 1000 + 1,
      name: "–û—Ç–∫—Ä—ã—Ç–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é",
      level: 1,
      type: "–ë–í–ò",
      subject: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
      validYears: "9-11 –∫–ª–∞—Å—Å",
      registration: "2024-10-01",
      qualifying: "2024-11-10",
      final: "2025-01-15",
      features: "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
    })
    baseOlympiads.push({
      id: directionId * 1000 + 2,
      name: "–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é ¬´–¢–µ—Ö–Ω–æ–ö—É–±–æ–∫¬ª",
      level: 2,
      type: "100 –±–∞–ª–ª–æ–≤",
      subject: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
      validYears: "8-11 –∫–ª–∞—Å—Å",
      registration: "2024-09-25",
      qualifying: "2024-11-15",
      final: "2025-01-20",
      features: "–û–ª–∏–º–ø–∏–∞–¥–∞ Mail.ru Group",
    })
  }

  return baseOlympiads
}

// –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ –≤—Å–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º
universities.forEach((u) => {
  u.directions.forEach((d) => {
    if (!olympiads[d.id]) {
      olympiads[d.id] = generateOlympiadsForDirection(d.id, d.name)
    }
  })
})

// ------------------------ –ù–û–í–û–ï: –í–£–ó-–°–ü–ï–¶–ò–§–ò–ß–ù–´–ï –ü–†–ê–í–ò–õ–ê –û–õ–ò–ú–ü–ò–ê–î ------------------------
// –£—Ç–∏–ª–∏—Ç–∞: –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—Ä–µ–¥–º–µ—Ç
const normalize = (s: string) => s.trim().toLowerCase()
const subjectAliases: Record<string, string[]> = {
  "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞": ["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞"],
  "–§–∏–∑–∏–∫–∞": ["—Ñ–∏–∑–∏–∫–∞", "–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—è", "–∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–µ –¥–µ–ª–æ", "–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—É–∫–∏", "—Ç–µ—Ö–Ω–∏–∫–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", "–Ω–∞–Ω–æ—Å–∏—Å—Ç–µ–º—ã –∏ –Ω–∞–Ω–æ–∏–Ω–∂–µ–Ω–µ—Ä–∏—è", "–∞—ç—Ä–æ–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã", "—Å–ø—É—Ç–Ω–∏–∫–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã", "–ª–µ—Ç–∞—é—â–∞—è —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞", "—Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞"],
  "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞": ["–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", "–∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö", "–±–æ–ª—å—à–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", "–≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –º–∏—Ä—ã", "–∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏–≥—Ä—ã"],
}

const matchesSubject = (recordSubjects: string[] | undefined, target: string) => {
  if (!recordSubjects || recordSubjects.length === 0) return true
  const canon = normalize(target)
  const expand = (x: string) => [normalize(x), ...(subjectAliases[x] || []).map(normalize)]
  const targetSet = new Set(expand(target))
  return recordSubjects.some(rs => targetSet.has(normalize(rs)))
}

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –ú–§–¢–ò ‚Äî –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–µ–≥–æ —Ç–µ–∫—Å—Ç–∞ (–§–ê–ö–¢/–§–†–ö–¢ –∏ –¥—Ä.)
const mftiRules: Olympiad[] = [
  // ====== –§–ê–ö–¢ / –§–∏–∑—Ç–µ—Ö-—à–∫–æ–ª–∞ –∞—ç—Ä–æ–∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π (–∏ –ü–ò–® –§–ê–õ–¢) ======
  {
    id: 300001,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢ / –ü–ò–® –§–ê–õ–¢",
    name: "–û–ª–∏–º–ø–∏–∞–¥–∞ –Æ–Ω–æ—à–µ—Å–∫–æ–π –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —à–∫–æ–ª—ã",
    level: 2,
    type: "–ë–í–ò",
    subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
    appliesToSubjects: ["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"],
    validYears: "8‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"],
    requirementNote: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠ –∏–ª–∏ –í–ò –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ 75+",
    features: "–Æ–ú–®",
  },
  {
    id: 300002,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢",
    name: "–û—Ç–∫—Ä—ã—Ç–∞—è –º–µ–∂–≤—É–∑–æ–≤—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –°–§–û ¬´–ë—É–¥—É—â–µ–µ –°–∏–±–∏—Ä–∏¬ª",
    level: 1,
    type: "–ë–í–ò",
    subject: "–§–∏–∑–∏–∫–∞",
    appliesToSubjects: ["–§–∏–∑–∏–∫–∞"],
    validYears: "9‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"],
    requirementNote: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò –ø–æ —Ñ–∏–∑–∏–∫–µ 75+",
    features: "",
  },
  // –û—Ç–∫—Ä—ã—Ç–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ‚Äî —Ç—Ä–∏ –ø—Ä–æ—Ñ–∏–ª—è
  ...["–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞","–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞","–§–∏–∑–∏–∫–∞"].map((subj, i) => ({
    id: 300010 + i,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢",
    name: "–û—Ç–∫—Ä—ã—Ç–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
    level: 1,
    type: "–ë–í–ò",
    subject: subj,
    appliesToSubjects: [subj],
    validYears: "8‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"],
    requirementNote: `–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò –ø–æ ${subj.toLowerCase()} 75+`,
    features: "",
  })),
  {
    id: 300020,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢",
    name: "–û—Ç–∫—Ä—ã—Ç–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é",
    level: 1,
    type: "–ë–í–ò",
    subject: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
    appliesToSubjects: ["–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"],
    validYears: "9‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"],
    requirementNote: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ 75+",
    features: "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
  },
  {
    id: 300021,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢",
    name: "–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é ¬´–ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏¬ª",
    level: 2,
    type: "–ë–í–ò",
    subject: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
    appliesToSubjects: ["–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"],
    validYears: "9‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: [
      "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
      "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã",
    ],
    requirementNote: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ 75+",
    features: "",
  },
  {
    id: 300030,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢",
    name: "–û—Ç–∫—Ä—ã—Ç–∞—è —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –º–µ–∂–≤—É–∑–æ–≤—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ (–û–†–ú–û)",
    level: 1,
    type: "–ë–í–ò",
    subject: "–§–∏–∑–∏–∫–∞",
    appliesToSubjects: ["–§–∏–∑–∏–∫–∞"],
    validYears: "9‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"],
    requirementNote: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò –ø–æ —Ñ–∏–∑–∏–∫–µ 75+",
    features: "",
  },
  // –ì–∞–∑–ø—Ä–æ–º ‚Äî –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–∏–ª–µ–π (–∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–µ –¥–µ–ª–æ, –ò–ö–¢, –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, —Ñ–∏–∑–∏–∫–∞)
  ...[
    { subj: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"] },
    { subj: "–§–∏–∑–∏–∫–∞", groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"] },
    { subj: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", groups: ["–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏","–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã","–ì–µ–æ–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"] },
  ].map((e, idx) => ({
    id: 300040 + idx,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢",
    name: "–û—Ç—Ä–∞—Å–ª–µ–≤–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–ì–∞–∑–ø—Ä–æ–º¬ª",
    level: 1,
    type: "–ë–í–ò",
    subject: e.subj,
    appliesToSubjects: [e.subj],
    validYears: "9‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: e.groups,
    requirementNote: `–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò –ø–æ ${e.subj.toLowerCase()} 75+`,
    features: "",
  })),
  // –†–æ—Å–∞—Ç–æ–º ‚Äî –∏–Ω—Ñ/–º–∞—Ç/—Ñ–∏–∑
  ...["–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞","–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞","–§–∏–∑–∏–∫–∞"].map((subj, idx)=>({
    id: 300060 + idx,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢",
    name: "–û—Ç—Ä–∞—Å–ª–µ–≤–∞—è —Ñ–∏–∑–∏–∫–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–†–æ—Å–∞—Ç–æ–º¬ª",
    level: 1,
    type: "–ë–í–ò",
    subject: subj,
    appliesToSubjects: [subj],
    validYears: "9‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: subj==="–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"
        ? ["–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏","–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã","–ì–µ–æ–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"]
        : ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"],
    requirementNote: `–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò –ø–æ ${subj.toLowerCase()} 75+`,
    features: "",
  })),
  // –°–ü–± –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è (—Ñ–∏–∑–∏–∫–∞ –ø–æ —Å—É—Ç–∏)
  {
    id: 300070,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢",
    name: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–∞—è –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞",
    level: 1,
    type: "–ë–í–ò",
    subject: "–ê—Å—Ç—Ä–æ–Ω–æ–º–∏—è",
    appliesToSubjects: ["–§–∏–∑–∏–∫–∞"],
    validYears: "8‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"],
    requirementNote: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò –ø–æ —Ñ–∏–∑–∏–∫–µ 75+",
    features: "",
  },
  // –°–ü–±. –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤: –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞/—Ñ–∏–∑–∏–∫–∞
  ...["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞","–§–∏–∑–∏–∫–∞"].map((subj, i)=>({
    id: 300080 + i,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢",
    name: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
    level: 1,
    type: "–ë–í–ò",
    subject: subj,
    appliesToSubjects: [subj === "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" ? "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" : "–§–∏–∑–∏–∫–∞"],
    validYears: "8‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"],
    requirementNote: `–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò –ø–æ ${subj.toLowerCase()} 75+`,
    features: "",
  })),
  // –¢—É—Ä–Ω–∏—Ä –≥–æ—Ä–æ–¥–æ–≤ (–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞), –¢—É—Ä–Ω–∏—Ä –∏–º. –ú.–í. –õ–æ–º–æ–Ω–æ—Å–æ–≤–∞ (–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—è/–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞/—Ñ–∏–∑–∏–∫–∞)
  {
    id: 300090,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢",
    name: "–¢—É—Ä–Ω–∏—Ä –≥–æ—Ä–æ–¥–æ–≤",
    level: 1,
    type: "–ë–í–ò",
    subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
    appliesToSubjects: ["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"],
    validYears: "8‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"],
    requirementNote: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ 75+",
    features: "",
  },
  ...[
    { subj: "–ê—Å—Ç—Ä–æ–Ω–æ–º–∏—è –∏ –Ω–∞—É–∫–∏ –æ –∑–µ–º–ª–µ", applies: "–§–∏–∑–∏–∫–∞", groups: ["–ì–µ–æ–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"] },
    { subj: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", applies: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"] },
    { subj: "–§–∏–∑–∏–∫–∞", applies: "–§–∏–∑–∏–∫–∞", groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"] },
  ].map((x, i)=>({
    id: 300100 + i,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢",
    name: "–¢—É—Ä–Ω–∏—Ä –∏–º–µ–Ω–∏ –ú.–í. –õ–æ–º–æ–Ω–æ—Å–æ–≤–∞",
    level: 1,
    type: "–ë–í–ò",
    subject: x.subj,
    appliesToSubjects: [x.applies],
    validYears: "8‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: x.groups,
    requirementNote: `–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò –ø–æ ${x.applies.toLowerCase()} 75+`,
    features: "",
  })),
  // –ú–û–®: –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—è/–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞/–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞/—Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞/—Ñ–∏–∑–∏–∫–∞
  ...["–ê—Å—Ç—Ä–æ–Ω–æ–º–∏—è","–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞","–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞","–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞","–§–∏–∑–∏–∫–∞"].map((subj,i)=>({
    id: 300120 + i,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢",
    name: "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
    level: 1,
    type: "–ë–í–ò",
    subject: subj,
    appliesToSubjects: [subj==="–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞"?"–§–∏–∑–∏–∫–∞":subj],
    validYears: "7‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"],
    requirementNote: `–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò –ø–æ ${ (subj==="–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞"?"—Ñ–∏–∑–∏–∫–µ":subj.toLowerCase()) } 75+`,
    features: "",
  })),
  // –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è –º–µ–∂–≤—É–∑–æ–≤—Å–∫–∞—è; –ö—É—Ä—á–∞—Ç–æ–≤; ¬´–õ–æ–º–æ–Ω–æ—Å–æ–≤¬ª (–º–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª–µ–π); ¬´–ü–æ–∫–æ—Ä–∏ –í–æ—Ä–æ–±—å—ë–≤—ã –≥–æ—Ä—ã!¬ª; ¬´–§–∏–∑—Ç–µ—Ö¬ª; ¬´–®–∞–≥ –≤ –±—É–¥—É—â–µ–µ¬ª; –°–ü–±–ì–£ –æ–ª–∏–º–ø–∏–∞–¥–∞; ¬´–¢–µ—Ö–Ω–æ–ö—É–±–æ–∫¬ª; ¬´–û–ª–∏–º–ø –ø–æ –ò–∏–ü¬ª
  ...[
    { name:"–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è –º–µ–∂–≤—É–∑–æ–≤—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤", subj:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" },
    { name:"–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è –º–µ–∂–≤—É–∑–æ–≤—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤", subj:"–§–∏–∑–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ –ö—É—Ä—á–∞—Ç–æ–≤", subj:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ –ö—É—Ä—á–∞—Ç–æ–≤", subj:"–§–∏–∑–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–õ–æ–º–æ–Ω–æ—Å–æ–≤¬ª", subj:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–õ–æ–º–æ–Ω–æ—Å–æ–≤¬ª", subj:"–ö–æ—Å–º–æ–Ω–∞–≤—Ç–∏–∫–∞", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–õ–æ–º–æ–Ω–æ—Å–æ–≤¬ª", subj:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–õ–æ–º–æ–Ω–æ—Å–æ–≤¬ª", subj:"–ú–µ—Ö–∞–Ω–∏–∫–∞ –∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ", applies:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–õ–æ–º–æ–Ω–æ—Å–æ–≤¬ª", subj:"–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–õ–æ–º–æ–Ω–æ—Å–æ–≤¬ª", subj:"–§–∏–∑–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–ü–æ–∫–æ—Ä–∏ –í–æ—Ä–æ–±—å—ë–≤—ã –≥–æ—Ä—ã!¬ª", subj:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–ü–æ–∫–æ—Ä–∏ –í–æ—Ä–æ–±—å—ë–≤—ã –≥–æ—Ä—ã!¬ª", subj:"–§–∏–∑–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–†–æ–±–æ—Ñ–µ—Å—Ç¬ª", subj:"–§–∏–∑–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–§–∏–∑—Ç–µ—Ö¬ª", subj:"–ò–Ω–∂–µ–Ω–µ—Ä–Ω–æ–µ –¥–µ–ª–æ", applies:"–§–∏–∑–∏–∫–∞", prizeNote:"–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –∏ –ø—Ä–∏–∑—ë—Ä–∞–º" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–§–∏–∑—Ç–µ—Ö¬ª", subj:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–§–∏–∑—Ç–µ—Ö¬ª", subj:"–ù–∞—É—á–Ω–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–§–∏–∑—Ç–µ—Ö¬ª", subj:"–§–∏–∑–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–®–∞–≥ –≤ –±—É–¥—É—â–µ–µ¬ª", subj:"–ò–Ω–∂–µ–Ω–µ—Ä–Ω–æ–µ –¥–µ–ª–æ", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–®–∞–≥ –≤ –±—É–¥—É—â–µ–µ¬ª", subj:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–®–∞–≥ –≤ –±—É–¥—É—â–µ–µ¬ª", subj:"–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≥—Ä–∞—Ñ–∏–∫–∞", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–®–∞–≥ –≤ –±—É–¥—É—â–µ–µ¬ª", subj:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ ¬´–®–∞–≥ –≤ –±—É–¥—É—â–µ–µ¬ª", subj:"–§–∏–∑–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é", subj:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é ¬´–¢–µ—Ö–Ω–æ–ö—É–±–æ–∫¬ª", subj:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞", subj:"–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞", subj:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞", subj:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" },
    { name:"–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞", subj:"–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É", subj:"–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"¬´–§–æ—Ä–º—É–ª–∞ –ï–¥–∏–Ω—Å—Ç–≤–∞¬ª/¬´–¢—Ä–µ—Ç—å–µ —Ç—ã—Å—è—á–µ–ª–µ—Ç–∏–µ¬ª", subj:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" },
    // –ù–¢–û ‚Äî –∫–ª—é—á–µ–≤—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ (—Å–æ–∫—Ä–∞—Ç–∏–ª –¥–æ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ç—Ä–æ–∫)
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–ê–≤—Ç–æ–Ω–æ–º–Ω—ã–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–ê–Ω–∞–ª–∏–∑ –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö —Å–Ω–∏–º–∫–æ–≤ –∏ –≥–µ–æ–¥–∞–Ω–Ω—ã—Ö", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–ê—ç—Ä–æ–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–ë–µ—Å–ø–∏–ª–æ—Ç–Ω—ã–µ –∞–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–ë–æ–ª—å—à–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –º–∏—Ä—ã / AR/VR / –∏–≥—Ä—ã", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–í–æ–¥–Ω—ã–µ —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–õ–µ—Ç–∞—é—â–∞—è —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–ù–∞–Ω–æ—Å–∏—Å—Ç–µ–º—ã –∏ –Ω–∞–Ω–æ–∏–Ω–∂–µ–Ω–µ—Ä–∏—è", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–°–ø—É—Ç–Ω–∏–∫–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã", applies:"–§–∏–∑–∏–∫–∞" },
    { name:"–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–π —Å–≤—è–∑–∏", applies:"–§–∏–∑–∏–∫–∞" },
  ].map((row, i)=>({
    id: 300200 + i,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–ê–ö–¢",
    name: row.name,
    level: 1,
    type: "–ë–í–ò",
    subject: row.subj,
    appliesToSubjects: [row.applies ?? row.subj],
    validYears: "8‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–ê–ö–¢"].concat(
        /–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫/i.test(row.subj) || /–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç/i.test(row.subj) || /–¥–∞–Ω–Ω/i.test(row.subj)
            ? ["–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏","–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã"]
            : []
    ),
    requirementNote: `–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò –ø–æ ${(row.applies ?? row.subj).toLowerCase()} 75+`,
    features: "",
  })),
  // ====== –§–†–ö–¢ / –§–∏–∑—Ç–µ—Ö-—à–∫–æ–ª–∞ —Ä–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏–∫–∏ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π ======
  // –ó–¥–µ—Å—å ‚Äî –≤—ã–¥–µ—Ä–∂–∫–∏ –∏–∑ —Ç–≤–æ–µ–≥–æ –±–ª–æ–∫–∞ –ø—Ä–æ –§–†–ö–¢ (—Å–æ–∫—Ä–∞—Ç–∏–ª –¥–æ –∫–ª—é—á–µ–≤—ã—Ö, –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å —Ç–µ–º –∂–µ —Å–ø–æ—Å–æ–±–æ–º)
  ...[
    { name:"–ù–¢–û", subj:"–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", groups:["–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞","–†–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏–∫–∞ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ (—Ñ–∏–∑–∏–∫–∞)"] },
    { name:"–ù–¢–û", subj:"–ë–µ—Å–ø–∏–ª–æ—Ç–Ω—ã–µ –∞–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", applies:"–ò–Ω—Ñ/–§–∏–∑", groups:["–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞","–†–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏–∫–∞ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"] },
    { name:"–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É", subj:"–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", groups:["–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞"] },
    { name:"–í—ã—Å—à–∞—è –ø—Ä–æ–±–∞", subj:"–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", groups:["–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞"] },
    { name:"–í—Å–µ—Å–∏–±–∏—Ä—Å–∫–∞—è –æ—Ç–∫—Ä—ã—Ç–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤", subj:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", groups:["–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞"] },
    { name:"–í—Å–µ—Å–∏–±–∏—Ä—Å–∫–∞—è –æ—Ç–∫—Ä—ã—Ç–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤", subj:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", applies:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", groups:["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–†–ö–¢"] },
    { name:"–í—Å–µ—Å–∏–±–∏—Ä—Å–∫–∞—è –æ—Ç–∫—Ä—ã—Ç–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤", subj:"–§–∏–∑–∏–∫–∞", applies:"–§–∏–∑–∏–∫–∞", groups:["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–†–ö–¢"] },
    { name:"–í—É–∑–æ–≤—Å–∫–æ-–∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ", subj:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", applies:"–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", groups:["–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞"] },
    { name:"–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–∞—è –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞", subj:"–ê—Å—Ç—Ä–æ–Ω–æ–º–∏—è", applies:"–§–∏–∑–∏–∫–∞", groups:["–†–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏–∫–∞ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"] },
    { name:"–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤", subj:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", applies:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", groups:["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–†–ö–¢"] },
    { name:"–¢—É—Ä–Ω–∏—Ä –≥–æ—Ä–æ–¥–æ–≤", subj:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", applies:"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", groups:["–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã –§–†–ö–¢"] },
  ].map((x, i)=>({
    id: 310000 + i,
    universityShortName: "–ú–§–¢–ò",
    faculty: "–§–†–ö–¢",
    name: x.name,
    level: 1,
    type: "–ë–í–ò",
    subject: x.subj,
    appliesToSubjects: [x.applies==="–ò–Ω—Ñ/–§–∏–∑" ? "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞":"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞","–§–∏–∑–∏–∫–∞"].filter(Boolean) as string[],
    validYears: "8‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: x.groups,
    requirementNote: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ï–ì–≠/–í–ò 75+ –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É –ø—Ä–µ–¥–º–µ—Ç—É",
    features: "",
  })),
]

// –ò–¢–ú–û ‚Äî –≤—ã–¥–µ—Ä–∂–∫–∏ (–ë–í–ò –∏ 100 –±–∞–ª–ª–æ–≤), –ø–æ PDF. –ú–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ.
const itmoRules: Olympiad[] = [
  {
    id: 500001,
    universityShortName: "–ò–¢–ú–û",
    faculty: "–ü–ú–ò/–ò–í–¢/–ò–°–∏–¢",
    name: "–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ ¬´–í—ã—Å—à–∞—è –ø—Ä–æ–±–∞¬ª",
    level: 1,
    type: "–ë–í–ò",
    subject: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
    appliesToSubjects: ["–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"],
    validYears: "10‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["–ü–ú–ò","–ò–í–¢","–ò–°–∏–¢"],
    requirementNote: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å/–ø—Ä–∏–∑—ë—Ä, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ 75+ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ",
    features: "–î–∞—ë—Ç –ë–í–ò –ø–æ —Ä—è–¥—É –ò–¢-–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ò–¢–ú–û.",
  },
  {
    id: 500002,
    universityShortName: "–ò–¢–ú–û",
    faculty: "–ü–ú–ò/–ò–í–¢/–ò–°–∏–¢",
    name: "–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é ¬´–¢–µ—Ö–Ω–æ–ö—É–±–æ–∫¬ª",
    level: 1,
    type: "–ë–í–ò",
    subject: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
    appliesToSubjects: ["–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"],
    validYears: "10‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["–ü–ú–ò","–ò–í–¢","–ò–°–∏–¢","–ü–ò"],
    requirementNote: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å (–∏–ª–∏ –ø—Ä–∏–∑—ë—Ä –¥–ª—è —Ä—è–¥–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π), 75+ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ",
    features: "",
  },
  {
    id: 500010,
    universityShortName: "–ò–¢–ú–û",
    faculty: "–û–ø—Ç–∏–∫–∞/–§–æ—Ç–æ–Ω–∏–∫–∞",
    name: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
    level: 1,
    type: "100 –±–∞–ª–ª–æ–≤",
    subject: "–§–∏–∑–∏–∫–∞",
    appliesToSubjects: ["–§–∏–∑–∏–∫–∞"],
    validYears: "10‚Äì11",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["12.03.03 –§–æ—Ç–æ–Ω–∏–∫–∞ –∏ –æ–ø—Ç–æ–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "12.03.05 –õ–∞–∑–µ—Ä–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞"],
    requirementNote: "–î–∞–µ—Ç 100 –±–∞–ª–ª–æ–≤ –ø–æ —Ñ–∏–∑–∏–∫–µ (–ø—Ä–∏ 75+ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏) ‚Äî –±–µ–∑ –ë–í–ò",
    features: "",
  },
]

// –¢–ì–£ ‚Äî –≤—ã–¥–µ—Ä–∂–∫–∏ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –≥–¥–µ –¥–∞—é—Ç—Å—è –ë–í–ò/100 –±–∞–ª–ª–æ–≤ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º
const tguRules: Olympiad[] = [
  {
    id: 1000001,
    universityShortName: "–¢–ì–£",
    faculty: "–ú–ú–§/–ò–ü–ú–ö–ù",
    name: "–õ—é–±–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –∏–∑ –ø–µ—Ä–µ—á–Ω—è –ú–∏–Ω–æ–±—Ä–Ω–∞—É–∫–∏ (1‚Äì3 —É—Ä–æ–≤–Ω–∏)",
    level: "1‚Äì3",
    type: "–ë–í–ò",
    subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
    appliesToSubjects: ["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞","–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞","–§–∏–∑–∏–∫–∞"],
    validYears: "–∑–∞ 4 –≥–æ–¥–∞",
    registration: "",
    qualifying: "",
    final: "",
    groups: ["01.03.01 –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞","01.03.02 –ü–ú–ò","02.03.01 –ú–ö–ù","02.03.02 –§–ò–ò–¢","02.03.03 –ú–û–ê–ò–°"],
    requirementNote: "–ë–í–ò / –ª–∏–±–æ 100 –±–∞–ª–ª–æ–≤ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É (–ø–æ –ø—Ä–∞–≤–∏–ª–∞–º —Ç–∞–±–ª–∏—Ü—ã –¢–ì–£)",
    features: "–°–º. –ø–æ–ª–Ω—ã–π –ø–µ—Ä–µ—á–µ–Ω—å –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º –≤ —Ç–∞–±–ª–∏—Ü–µ.",
  },
]

// –°–æ–±–∏—Ä–∞–µ–º –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å –ø–æ –≤—É–∑–∞–º
const universityOlympiadRules: Record<string, Olympiad[]> = {
  "–ú–§–¢–ò": mftiRules,
  "–ò–¢–ú–û": itmoRules,
  "–¢–ì–£": tguRules,
  // –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ —Å—é–¥–∞ –∂–µ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –°–ü–±–ì–£, –ù–ì–£ –∏ —Ç.–¥.
}

// ------------------------ UI –ö–û–ú–ü–û–ù–ï–ù–¢ ------------------------
export function UniversitySelection() {
  const [selectedUniversity, setSelectedUniversity] = useState<number | null>(null)
  const [selectedDirection, setSelectedDirection] = useState<number | null>(null)
  const [selectedOlympiads, setSelectedOlympiads] = useState<number[]>([])
  const [searchQuery, setSearchQuery] = useState("")

  const handleSelectOlympiad = (olympiadId: number) => {
    setSelectedOlympiads((prev) =>
        prev.includes(olympiadId) ? prev.filter((id) => id !== olympiadId) : [...prev, olympiadId],
    )
  }

  const filteredUniversities = universities.filter(
      (university) =>
          university.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
          university.shortName.toLowerCase().includes(searchQuery.toLowerCase()),
  )

  const subjectFromDirection = (name?: string) => {
    if (!name) return "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"
    const n = name.toLowerCase()
    if (n.includes("—Ñ–∏–∑")) return "–§–∏–∑–∏–∫–∞"
    if (n.includes("–∏–Ω—Ñ–æ—Ä–º") || n.includes("–ø—Ä–æ–≥—Ä–∞–º–º")) return "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"
    if (n.includes("—Ö–∏–º")) return "–•–∏–º–∏—è"
    if (n.includes("–±–∏–æ")) return "–ë–∏–æ–ª–æ–≥–∏—è"
    if (n.includes("—ç–∫–æ–Ω")) return "–≠–∫–æ–Ω–æ–º–∏–∫–∞"
    if (n.includes("—é—Ä–∏—Å–ø—Ä—É–¥")) return "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ"
    if (n.includes("–≥–µ–æ–ª–æ–≥") || n.includes("–≥–µ–æ–≥—Ä–∞—Ñ")) return "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è"
    return "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"
  }

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è –≤—ã–±–æ—Ä–∫–∞ –≤—É–∑-–ø—Ä–∞–≤–∏–ª –¥–ª—è —ç–∫—Ä–∞–Ω–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  const directionContext = useMemo(() => {
    if (!selectedDirection) return null
    const direction = universities.flatMap((u) => u.directions).find((d) => d.id === selectedDirection)
    const uni = universities.find(u => u.directions.some(d => d.id === selectedDirection))
    const subj = subjectFromDirection(direction?.name)
    const uniRules = universityOlympiadRules[uni?.shortName || ""] || []
    const filtered = uniRules.filter(r => matchesSubject(r.appliesToSubjects, subj))
    return { direction, uni, subj, rules: filtered }
  }, [selectedDirection])

  if (selectedDirection) {
    const directionOlympiads = olympiads[selectedDirection] || []
    const direction = universities.flatMap((u) => u.directions).find((d) => d.id === selectedDirection)

    return (
        <div className="p-4 space-y-4">
          <div className="flex items-center gap-2 mb-4">
            <Button variant="ghost" size="sm" onClick={() => setSelectedDirection(null)} className="text-primary">
              ‚Üê –ù–∞–∑–∞–¥
            </Button>
          </div>

          <div className="bg-light-gray p-4 rounded-lg mb-4">
            <h2 className="text-lg font-bold text-primary mb-2">{direction?.name}</h2>
            <div className="grid grid-cols-2 gap-4 text-sm">
              <div>
                <span className="text-neutral-gray">–ë—é–¥–∂–µ—Ç–Ω—ã—Ö –º–µ—Å—Ç:</span>
                <div className="font-semibold text-primary">{direction?.budgetPlaces}</div>
              </div>
              <div>
                <span className="text-neutral-gray">–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª 2024:</span>
                <div className="font-semibold text-primary">{direction?.passingScore}</div>
              </div>
            </div>
          </div>

          {/* –ë–ª–æ–∫ –≤—É–∑-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª (–Ω–æ–≤—ã–π) */}
          {directionContext?.uni && (
              <div className="space-y-3">
                <h3 className="text-lg font-bold text-primary">
                  –ü—Ä–∞–≤–∏–ª–∞ –æ–ª–∏–º–ø–∏–∞–¥ –≤ {directionContext.uni.shortName} –ø–æ –ø—Ä–æ—Ñ–∏–ª—é ¬´{directionContext.subj}¬ª
                </h3>

                {directionContext.rules.length === 0 ? (
                    <Card className="p-4">
                      <p className="text-sm text-neutral-gray">–î–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ—Ç –æ—Å–æ–±—ã—Ö –ø—Ä–∞–≤–∏–ª, –∫—Ä–æ–º–µ –æ–±—â–∏—Ö.</p>
                    </Card>
                ) : (
                    <div className="space-y-2">
                      {directionContext.rules.map((rule) => (
                          <Card key={`uni-rule-${rule.id}`} className="p-4 card-hover">
                            <div className="flex justify-between items-start mb-2">
                              <h5 className="font-semibold text-primary text-sm">
                                {rule.name} {!!rule.faculty && <span className="text-accent">¬∑ {rule.faculty}</span>}
                              </h5>
                              <Badge
                                  variant={rule.type === "–ë–í–ò" ? "default" : "secondary"}
                                  className={rule.type === "–ë–í–ò" ? "bg-primary text-white" : "bg-accent text-primary"}
                              >
                                {rule.type}
                              </Badge>
                            </div>
                            <div className="space-y-1 text-xs text-neutral-gray">
                              <p><strong>–ü—Ä–æ—Ñ–∏–ª—å/–ø—Ä–µ–¥–º–µ—Ç:</strong> {rule.subject}</p>
                              {!!rule.groups?.length && (
                                  <p><strong>–ö–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –≥—Ä—É–ø–ø—ã:</strong> {rule.groups.join("; ")}</p>
                              )}
                              {!!rule.requirementNote && (
                                  <p className="text-primary"><strong>–£—Å–ª–æ–≤–∏–µ:</strong> {rule.requirementNote}</p>
                              )}
                              {!!rule.features && <p><strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</strong> {rule.features}</p>}
                            </div>
                          </Card>
                      ))}
                    </div>
                )}
              </div>
          )}

          <div className="space-y-3">
            <h3 className="text-lg font-bold text-primary">–û–ª–∏–º–ø–∏–∞–¥—ã –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è</h3>

            <div className="space-y-2">
              <h4 className="font-semibold text-primary text-sm">üèÜ –ë–í–ò (–ë–µ–∑ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π)</h4>
              {directionOlympiads
                  .filter((o) => o.type === "–ë–í–ò")
                  .map((olympiad) => (
                      <Card
                          key={olympiad.id}
                          className="p-4 card-hover cursor-pointer"
                          onClick={() => handleSelectOlympiad(olympiad.id)}
                      >
                        <div className="flex justify-between items-start mb-2">
                          <h5 className="font-semibold text-primary text-sm">{olympiad.name}</h5>
                          <Badge
                              variant={olympiad.level === "–í—Å–û–®" ? "default" : "secondary"}
                              className="bg-primary text-white"
                          >
                            {olympiad.level === "–í—Å–û–®" ? "–í—Å–û–®" : `${olympiad.level} —É—Ä–æ–≤–µ–Ω—å`}
                          </Badge>
                        </div>
                        <div className="space-y-1 text-xs text-neutral-gray">
                          <p><strong>–ü—Ä–µ–¥–º–µ—Ç:</strong> {olympiad.subject}</p>
                          <p><strong>–ö–ª–∞—Å—Å—ã:</strong> {olympiad.validYears}</p>
                          <p><strong>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:</strong> {new Date(olympiad.registration).toLocaleDateString("ru")}</p>
                          <p><strong>–û—Ç–±–æ—Ä–æ—á–Ω—ã–π:</strong> {new Date(olympiad.qualifying).toLocaleDateString("ru")}</p>
                          <p><strong>–ó–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–π:</strong> {new Date(olympiad.final).toLocaleDateString("ru")}</p>
                          <p className="text-primary"><strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</strong> {olympiad.features}</p>
                        </div>
                        <Button
                            size="sm"
                            className={`mt-3 w-full ${selectedOlympiads.includes(olympiad.id) ? "bg-accent text-primary" : "bg-primary text-white"}`}
                        >
                          {selectedOlympiads.includes(olympiad.id) ? "‚úì –í—ã–±—Ä–∞–Ω–æ" : "–í—ã–±—Ä–∞—Ç—å"}
                        </Button>
                      </Card>
                  ))}
            </div>

            <div className="space-y-2">
              <h4 className="font-semibold text-primary text-sm">üíØ 100 –±–∞–ª–ª–æ–≤ –ï–ì–≠</h4>
              {directionOlympiads
                  .filter((o) => o.type === "100 –±–∞–ª–ª–æ–≤")
                  .map((olympiad) => (
                      <Card
                          key={olympiad.id}
                          className="p-4 card-hover cursor-pointer"
                          onClick={() => handleSelectOlympiad(olympiad.id)}
                      >
                        <div className="flex justify-between items-start mb-2">
                          <h5 className="font-semibold text-primary text-sm">{olympiad.name}</h5>
                          <Badge variant="secondary" className="bg-accent text-primary">
                            {olympiad.level} —É—Ä–æ–≤–µ–Ω—å
                          </Badge>
                        </div>
                        <div className="space-y-1 text-xs text-neutral-gray">
                          <p><strong>–ü—Ä–µ–¥–º–µ—Ç:</strong> {olympiad.subject}</p>
                          <p><strong>–ö–ª–∞—Å—Å—ã:</strong> {olympiad.validYears}</p>
                          <p><strong>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:</strong> {new Date(olympiad.registration).toLocaleDateString("ru")}</p>
                          <p><strong>–û—Ç–±–æ—Ä–æ—á–Ω—ã–π:</strong> {new Date(olympiad.qualifying).toLocaleDateString("ru")}</p>
                          <p><strong>–ó–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–π:</strong> {new Date(olympiad.final).toLocaleDateString("ru")}</p>
                          <p className="text-primary"><strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</strong> {olympiad.features}</p>
                        </div>
                        <Button
                            size="sm"
                            className={`mt-3 w-full ${selectedOlympiads.includes(olympiad.id) ? "bg-accent text-primary" : "bg-primary text-white"}`}
                        >
                          {selectedOlympiads.includes(olympiad.id) ? "‚úì –í—ã–±—Ä–∞–Ω–æ" : "–í—ã–±—Ä–∞—Ç—å"}
                        </Button>
                      </Card>
                  ))}
            </div>
          </div>

          {selectedOlympiads.length > 0 && (
              <div className="fixed bottom-20 left-4 right-4 max-w-md mx-auto">
                <Card className="p-3 bg-accent">
                  <p className="text-primary text-sm font-medium text-center">
                    –í—ã–±—Ä–∞–Ω–æ –æ–ª–∏–º–ø–∏–∞–¥: {selectedOlympiads.length}
                  </p>
                  <Button className="w-full mt-2 bg-primary text-white">–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å</Button>
                </Card>
              </div>
          )}
        </div>
    )
  }

  if (selectedUniversity) {
    const university = universities.find((u) => u.id === selectedUniversity)

    return (
        <div className="p-4 space-y-4">
          <div className="flex items-center gap-2 mb-4">
            <Button variant="ghost" size="sm" onClick={() => setSelectedUniversity(null)} className="text-primary">
              ‚Üê –ù–∞–∑–∞–¥
            </Button>
          </div>

          <div className="text-center mb-6">
            <div className="text-4xl mb-2">{university?.logo}</div>
            <h2 className="text-lg font-bold text-primary">{university?.name}</h2>
            <p className="text-sm text-neutral-gray">–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</p>
          </div>

          <div className="space-y-3">
            {university?.directions.map((direction) => (
                <Card
                    key={direction.id}
                    className="p-4 card-hover cursor-pointer"
                    onClick={() => setSelectedDirection(direction.id)}
                >
                  <div className="flex justify-between items-start">
                    <div className="flex-1">
                      <h3 className="font-semibold text-primary">{direction.name}</h3>
                      <p className="text-xs text-neutral-gray">{direction.code}</p>
                      <div className="flex gap-4 mt-2 text-xs">
                    <span className="text-neutral-gray">
                      –ë—é–¥–∂–µ—Ç: <span className="text-primary font-medium">{direction.budgetPlaces}</span>
                    </span>
                        <span className="text-neutral-gray">
                      –ü—Ä–æ—Ö–æ–¥–Ω–æ–π: <span className="text-primary font-medium">{direction.passingScore}</span>
                    </span>
                      </div>
                    </div>
                    <div className="text-accent">‚Üí</div>
                  </div>
                </Card>
            ))}
          </div>
        </div>
    )
  }

  return (
      <div className="p-4 space-y-4">
        <div className="text-center mb-6">
          <h2 className="text-xl font-bold text-primary mb-2">–í—ã–±–µ—Ä–∏—Ç–µ –≤—É–∑</h2>
          <Input
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –≤—É–∑–∞..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="mb-4"
          />
        </div>

        <div className="space-y-3">
          {filteredUniversities.map((university) => (
              <Card

                  key={university.id}
                  className="p-4 card-hover cursor-pointer"
                  onClick={() => setSelectedUniversity(university.id)}
              >
                <div className="flex items-center gap-3">
                  <div className="text-2xl">{university.logo}</div>
                  <div className="flex-1">
                    <h3 className="font-semibold text-primary">{university.shortName}</h3>
                    <p className="text-xs text-neutral-gray">{university.name}</p>
                    <p className="text-xs text-accent mt-1">{university.directions.length} –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π</p>
                  </div>
                  <div className="text-accent">‚Üí</div>
                </div>
              </Card>
          ))}
        </div>

        {filteredUniversities.length === 0 && searchQuery && (
            <div className="text-center py-8">
              <p className="text-neutral-gray">–í—É–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
              <Button variant="ghost" onClick={() => setSearchQuery("")} className="mt-2 text-primary">
                –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫
              </Button>
            </div>
        )}
      </div>
  )
}
